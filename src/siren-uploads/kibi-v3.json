[
  {
    "_id": "config:siren",
    "_type": "config",
    "_source": {
      "defaultIndex": "index-pattern:46c7e0b0-8482-11e9-b1ac-8541d07eaf10"
    }
  },
  {
    "_id": "dashboard:8890f410-8472-11e9-ab8f-4737c8be8ed5",
    "_type": "dashboard",
    "_source": {
      "title": "RealTime Ingestion View",
      "hits": 0,
      "description": "Dashbaord to view Realtime Data Entering The system",
      "panelsJSON": "[{\"size_x\":6,\"size_y\":3,\"panelIndex\":1,\"type\":\"visualization\",\"id\":\"visualization:6ed87080-8471-11e9-ab8f-4737c8be8ed5\",\"col\":1,\"row\":1},{\"size_x\":6,\"size_y\":3,\"panelIndex\":3,\"type\":\"visualization\",\"id\":\"visualization:21a7bd10-8472-11e9-ab8f-4737c8be8ed5\",\"col\":1,\"row\":4},{\"size_x\":6,\"size_y\":9,\"panelIndex\":4,\"type\":\"visualization\",\"id\":\"visualization:6023ae00-8472-11e9-ab8f-4737c8be8ed5\",\"col\":7,\"row\":1}]",
      "optionsJSON": "{\"darkTheme\":false,\"hideBorders\":false}",
      "uiStateJSON": "{\"P-3\":{\"vis\":{\"params\":{\"sort\":{\"columnIndex\":null,\"direction\":null}}}},\"P-4\":{\"sort\":[]}}",
      "version": 1,
      "timeRestore": false,
      "savedSearchId": "",
      "priority": 0,
      "kibanaSavedObjectMeta": {
        "searchSourceJSON": "{\"filter\":[{\"query\":{\"match_all\":{}}}],\"highlightAll\":true,\"version\":true}"
      }
    }
  },
  {
    "_id": "dashboard:19e11910-8485-11e9-a489-13a83bc6e842",
    "_type": "dashboard",
    "_source": {
      "title": "Paper Communities",
      "hits": 0,
      "description": "",
      "panelsJSON": "[{\"size_x\":3,\"size_y\":7,\"panelIndex\":1,\"type\":\"visualization\",\"id\":\"visualization:ca4d9170-84bc-11e9-9214-c75b97962756\",\"col\":1,\"row\":1},{\"size_x\":9,\"size_y\":7,\"panelIndex\":3,\"type\":\"visualization\",\"id\":\"visualization:4ef44ef0-84bd-11e9-9214-c75b97962756\",\"col\":4,\"row\":1},{\"size_x\":12,\"size_y\":3,\"panelIndex\":4,\"type\":\"visualization\",\"id\":\"visualization:2ff9aa00-84bc-11e9-9214-c75b97962756\",\"col\":1,\"row\":8}]",
      "optionsJSON": "{\"darkTheme\":false,\"hideBorders\":false}",
      "uiStateJSON": "{\"P-3\":{\"settings\":{\"sidebar\":{\"open\":false},\"lenses\":{}}},\"P-4\":{\"sort\":[\"_score\",\"desc\"]}}",
      "version": 1,
      "timeRestore": false,
      "savedSearchId": "search:6c2ec490-8482-11e9-a489-13a83bc6e842",
      "priority": 0,
      "kibanaSavedObjectMeta": {
        "searchSourceJSON": "{\"filter\":[{\"meta\":{\"index\":\"index-pattern:759768b0-8483-11e9-b1ac-8541d07eaf10\",\"controlledBy\":\"1559428050977\",\"type\":\"phrase\",\"key\":\"field.keyword\",\"value\":\"3D computer graphics\",\"disabled\":false,\"negate\":false,\"alias\":null},\"query\":{\"match\":{\"field.keyword\":{\"query\":\"3D computer graphics\",\"type\":\"phrase\"}}},\"$state\":{\"store\":\"appState\"}},{\"query\":{\"match_all\":{}}}],\"highlightAll\":true,\"version\":true}"
      }
    }
  },
  {
    "_id": "index-pattern:46c7e0b0-8482-11e9-b1ac-8541d07eaf10",
    "_type": "index-pattern",
    "_source": {
      "title": "author*",
      "fields": "[{\"name\":\"_id\",\"esType\":\"_id\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"name\":\"_index\",\"esType\":\"_index\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"name\":\"_score\",\"esType\":\"text\",\"type\":\"number\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":false,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"_source\",\"esType\":\"_source\",\"type\":\"_source\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":false,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"_type\",\"esType\":\"_type\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"name\":\"author_md5\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"author_md5.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"author_name\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"author_name.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"id\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"id.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"lpa_communities\",\"esType\":\"long\",\"type\":\"number\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"related_entities_md5\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"related_entities_md5.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"upsert_id\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"upsert_id.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true}]",
      "excludeIndices": true,
      "fieldFormatMap": "{\"related_entities_md5\":{\"id\":\"string\"}}"
    }
  },
  {
    "_id": "index-pattern:a19566b0-846f-11e9-96f4-fb17f00fafe1",
    "_type": "index-pattern",
    "_source": {
      "title": "staging*",
      "fields": "[{\"name\":\"_id\",\"esType\":\"_id\",\"type\":\"string\",\"count\":0,\"primaryKey\":true,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"name\":\"_index\",\"esType\":\"_index\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"name\":\"_score\",\"esType\":\"text\",\"type\":\"number\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":false,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"_source\",\"esType\":\"_source\",\"type\":\"_source\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":false,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"_type\",\"esType\":\"_type\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"name\":\"id\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"id.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"message_id\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"message_id.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"message_processed\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"message_processed.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"message_recieved_ts\",\"esType\":\"long\",\"type\":\"number\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"topic\",\"esType\":\"text\",\"type\":\"string\",\"count\":1,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"topic.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"value\",\"esType\":\"text\",\"type\":\"string\",\"count\":1,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"value.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"sc_timestamp\",\"type\":\"date\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":true,\"script\":\"doc['message_recieved_ts'].value\",\"lang\":\"painless\",\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false}]",
      "excludeIndices": true,
      "fieldFormatMap": "{\"message_recieved_ts\":{\"id\":\"string\"},\"sc_timestamp\":{\"id\":\"date\"},\"topic\":{\"id\":\"string\",\"params\":{\"transform\":\"upper\"}},\"value\":{\"id\":\"string\"}}"
    }
  },
  {
    "_id": "index-pattern:a9bb2ff0-8483-11e9-b1ac-8541d07eaf10",
    "_type": "index-pattern",
    "_source": {
      "title": "phrase*",
      "fields": "[{\"name\":\"_id\",\"esType\":\"_id\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"name\":\"_index\",\"esType\":\"_index\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"name\":\"_score\",\"esType\":\"text\",\"type\":\"number\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":false,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"_source\",\"esType\":\"_source\",\"type\":\"_source\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":false,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"_type\",\"esType\":\"_type\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"name\":\"bigrams\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"bigrams.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"bigrams_md5\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"bigrams_md5.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"id\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"id.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"lpa_communities\",\"esType\":\"long\",\"type\":\"number\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"trigrams\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"trigrams.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"trigrams_md5\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"trigrams_md5.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"upsert_id\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"upsert_id.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true}]",
      "excludeIndices": true
    }
  },
  {
    "_id": "index-pattern:8dd2b790-8483-11e9-b1ac-8541d07eaf10",
    "_type": "index-pattern",
    "_source": {
      "title": "organisation*",
      "fields": "[{\"name\":\"_id\",\"esType\":\"_id\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"name\":\"_index\",\"esType\":\"_index\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"name\":\"_score\",\"esType\":\"text\",\"type\":\"number\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":false,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"_source\",\"esType\":\"_source\",\"type\":\"_source\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":false,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"_type\",\"esType\":\"_type\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"name\":\"id\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"id.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"lpa_communities\",\"esType\":\"long\",\"type\":\"number\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"organisation_md5\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"organisation_md5.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"organisation_name\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"organisation_name.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"upsert_id\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"upsert_id.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true}]",
      "excludeIndices": true
    }
  },
  {
    "_id": "index-pattern:ca0bbd60-8483-11e9-b1ac-8541d07eaf10",
    "_type": "index-pattern",
    "_source": {
      "title": "keyword*",
      "fields": "[{\"name\":\"_id\",\"esType\":\"_id\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"name\":\"_index\",\"esType\":\"_index\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"name\":\"_score\",\"esType\":\"text\",\"type\":\"number\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":false,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"_source\",\"esType\":\"_source\",\"type\":\"_source\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":false,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"_type\",\"esType\":\"_type\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"name\":\"id\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"id.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"keyword\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"keyword.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"keyword_md5\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"keyword_md5.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"lpa_communities\",\"esType\":\"long\",\"type\":\"number\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"upsert_id\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"upsert_id.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true}]",
      "excludeIndices": true
    }
  },
  {
    "_id": "index-pattern:150aead0-8483-11e9-b1ac-8541d07eaf10",
    "_type": "index-pattern",
    "_source": {
      "title": "venue*",
      "fields": "[{\"name\":\"_id\",\"esType\":\"_id\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"name\":\"_index\",\"esType\":\"_index\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"name\":\"_score\",\"esType\":\"text\",\"type\":\"number\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":false,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"_source\",\"esType\":\"_source\",\"type\":\"_source\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":false,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"_type\",\"esType\":\"_type\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"name\":\"id\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"id.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"lpa_communities\",\"esType\":\"long\",\"type\":\"number\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"upsert_id\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"upsert_id.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"venue\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"venue.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"venue_md5\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"venue_md5.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true}]",
      "excludeIndices": true
    }
  },
  {
    "_id": "index-pattern:5573deb0-8483-11e9-b1ac-8541d07eaf10",
    "_type": "index-pattern",
    "_source": {
      "title": "year",
      "fields": "[{\"name\":\"_id\",\"esType\":\"_id\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"name\":\"_index\",\"esType\":\"_index\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"name\":\"_score\",\"esType\":\"text\",\"type\":\"number\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":false,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"_source\",\"esType\":\"_source\",\"type\":\"_source\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":false,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"_type\",\"esType\":\"_type\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"name\":\"id\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"id.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"lpa_communities\",\"esType\":\"long\",\"type\":\"number\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"upsert_id\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"upsert_id.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"year\",\"esType\":\"long\",\"type\":\"number\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"year_md5\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"year_md5.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true}]",
      "excludeIndices": true
    }
  },
  {
    "_id": "index-pattern:32cbccb0-8483-11e9-b1ac-8541d07eaf10",
    "_type": "index-pattern",
    "_source": {
      "title": "volume_issue*",
      "fields": "[{\"name\":\"_id\",\"esType\":\"_id\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"name\":\"_index\",\"esType\":\"_index\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"name\":\"_score\",\"esType\":\"text\",\"type\":\"number\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":false,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"_source\",\"esType\":\"_source\",\"type\":\"_source\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":false,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"_type\",\"esType\":\"_type\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"name\":\"upsert_id\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"upsert_id.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"volume_issue\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"volume_issue.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"volume_issue_md5\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"volume_issue_md5.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true}]",
      "excludeIndices": true
    }
  },
  {
    "_id": "index-pattern:759768b0-8483-11e9-b1ac-8541d07eaf10",
    "_type": "index-pattern",
    "_source": {
      "title": "field*",
      "fields": "[{\"name\":\"_id\",\"esType\":\"_id\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"name\":\"_index\",\"esType\":\"_index\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"name\":\"_score\",\"esType\":\"text\",\"type\":\"number\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":false,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"_source\",\"esType\":\"_source\",\"type\":\"_source\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":false,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"_type\",\"esType\":\"_type\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"name\":\"field\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"field.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"field_md5\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"field_md5.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"upsert_id\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"upsert_id.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true}]",
      "excludeIndices": true
    }
  },
  {
    "_id": "index-pattern:ceb45350-8482-11e9-b1ac-8541d07eaf10",
    "_type": "index-pattern",
    "_source": {
      "title": "publisher*",
      "fields": "[{\"name\":\"_id\",\"esType\":\"_id\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"name\":\"_index\",\"esType\":\"_index\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"name\":\"_score\",\"esType\":\"text\",\"type\":\"number\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":false,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"_source\",\"esType\":\"_source\",\"type\":\"_source\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":false,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"_type\",\"esType\":\"_type\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"name\":\"publisher\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"publisher.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"publisher_md5\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"publisher_md5.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"upsert_id\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"upsert_id.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true}]",
      "excludeIndices": true
    }
  },
  {
    "_id": "index-pattern:6a40fe50-8482-11e9-b1ac-8541d07eaf10",
    "_type": "index-pattern",
    "_source": {
      "title": "paper",
      "fields": "[{\"name\":\"_id\",\"esType\":\"_id\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"name\":\"_index\",\"esType\":\"_index\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"name\":\"_score\",\"esType\":\"text\",\"type\":\"number\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":false,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"_source\",\"esType\":\"_source\",\"type\":\"_source\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":false,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"_type\",\"esType\":\"_type\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":false},{\"name\":\"abstract\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"abstract.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"abstract_bigrams\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"abstract_bigrams.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"abstract_trigrams\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"abstract_trigrams.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"authors\",\"esType\":\"object\",\"type\":\"unknown\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":false,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"authors.name\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"authors.name.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"authors.org\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"authors.org.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"doc_type\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"doc_type.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"doi\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"doi.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"fos\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"fos.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"id\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"id.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"issue\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"issue.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"keywords\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"keywords.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"lang\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"lang.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"lpa_communities\",\"esType\":\"long\",\"type\":\"number\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"n_citation\",\"esType\":\"long\",\"type\":\"number\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"page_end\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"page_end.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"page_start\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"page_start.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"publisher\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"publisher.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"references\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"references.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"related_entities_md5\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"related_entities_md5.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"source_id\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"source_id.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"source_name\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"source_name.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"title\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"title.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"title_bigrams\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"title_bigrams.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"title_md5\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"title_md5.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"title_trigrams\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"title_trigrams.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"upsert_id\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"upsert_id.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"url\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"url.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"venue\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"venue.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"volume\",\"esType\":\"text\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":false,\"readFromDocValues\":false},{\"name\":\"volume.keyword\",\"esType\":\"keyword\",\"type\":\"string\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true},{\"name\":\"year\",\"esType\":\"long\",\"type\":\"number\",\"count\":0,\"primaryKey\":false,\"singleValue\":false,\"scripted\":false,\"searchable\":true,\"aggregatable\":true,\"readFromDocValues\":true}]",
      "excludeIndices": true,
      "fieldFormatMap": "{\"related_entities_md5\":{\"id\":\"string\"}}"
    }
  },
  {
    "_id": "ontology-model:default-ontology",
    "_type": "ontology-model",
    "_source": {
      "title": "Default Ontology",
      "model": "@prefix siren: <http://siren.io/model#> .\n@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\n@prefix owl:   <http://www.w3.org/2002/07/owl#> .\n@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .\n@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .\n\nsiren:e242b75f-09f8-4e72-a206-82186980fb1a\n        a                owl:ObjectProperty ;\n        rdfs:domain      <http://siren.io/model#search%3Acbc469e0-8483-11e9-a489-13a83bc6e842> ;\n        rdfs:label       \"MENTIONED IN\"@en ;\n        rdfs:range       <http://siren.io/model#search%3A6c2ec490-8482-11e9-a489-13a83bc6e842> ;\n        siren:id         \"e242b75f-09f8-4e72-a206-82186980fb1a\" ;\n        siren:in_field   \"related_entities_md5.keyword\" ;\n        siren:out_field  \"keyword_md5.keyword\" ;\n        siren:timeout    \"-1\" ;\n        owl:inverseOf    siren:b3954c2c-046f-44bc-a67d-f16483ebb192 .\n\n<http://siren.io/model#search%3A573d2d00-8483-11e9-a489-13a83bc6e842>\n        a                         owl:Class ;\n        rdfs:label                \"Year\"@en ;\n        siren:color               \"#2fc72c\" ;\n        siren:icon                \"fas fa-calendar\" ;\n        siren:id                  \"search:573d2d00-8483-11e9-a489-13a83bc6e842\" ;\n        siren:indexPattern        \"index-pattern:5573deb0-8483-11e9-b1ac-8541d07eaf10\" ;\n        siren:instanceLabelType   \"FIELD\" ;\n        siren:instanceLabelValue  \"year\" ;\n        siren:parentId            \"null\" ;\n        siren:shortDescr          \"Data+Containing+Years\" ;\n        siren:type                \"SAVED_SEARCH\" .\n\n<http://siren.io/model#search%3A484ad730-8482-11e9-a489-13a83bc6e842>\n        a                         owl:Class ;\n        rdfs:label                \"Author\"@en ;\n        siren:color               \"#c7c12c\" ;\n        siren:icon                \"fas fa-user-graduate\" ;\n        siren:id                  \"search:484ad730-8482-11e9-a489-13a83bc6e842\" ;\n        siren:indexPattern        \"index-pattern:46c7e0b0-8482-11e9-b1ac-8541d07eaf10\" ;\n        siren:instanceLabelType   \"FIELD\" ;\n        siren:instanceLabelValue  \"author_name\" ;\n        siren:parentId            \"null\" ;\n        siren:shortDescr          \"Contains+Author+Data\" ;\n        siren:type                \"SAVED_SEARCH\" .\n\nsiren:074eed49-9ee5-4ec3-aa6f-bc9011148f94\n        a                owl:ObjectProperty ;\n        rdfs:domain      <http://siren.io/model#search%3A6c2ec490-8482-11e9-a489-13a83bc6e842> ;\n        rdfs:label       \"PUBLISHING YEAR\"@en ;\n        rdfs:range       <http://siren.io/model#search%3A573d2d00-8483-11e9-a489-13a83bc6e842> ;\n        siren:id         \"074eed49-9ee5-4ec3-aa6f-bc9011148f94\" ;\n        siren:in_field   \"year_md5.keyword\" ;\n        siren:out_field  \"related_entities_md5.keyword\" ;\n        siren:timeout    \"-1\" ;\n        owl:inverseOf    siren:3bdd8c96-dab2-47d4-a53c-d35571bfb447 .\n\n<http://siren.io/model#search%3A77559370-8483-11e9-a489-13a83bc6e842>\n        a                         owl:Class ;\n        rdfs:label                \"Field+of+Study\"@en ;\n        siren:color               \"#c72c89\" ;\n        siren:icon                \"fas fa-graduation-cap\" ;\n        siren:id                  \"search:77559370-8483-11e9-a489-13a83bc6e842\" ;\n        siren:indexPattern        \"index-pattern:759768b0-8483-11e9-b1ac-8541d07eaf10\" ;\n        siren:instanceLabelType   \"FIELD\" ;\n        siren:instanceLabelValue  \"field\" ;\n        siren:parentId            \"null\" ;\n        siren:shortDescr          \"Data+Containing+Fields+of+Study\" ;\n        siren:type                \"SAVED_SEARCH\" .\n\nsiren:icon  a   owl:AnnotationProperty .\n\n<http://siren.io/model#search%3A16c37040-8483-11e9-a489-13a83bc6e842>\n        a                         owl:Class ;\n        rdfs:label                \"Venue\"@en ;\n        siren:color               \"#8cc72c\" ;\n        siren:icon                \"fal fa-globe\" ;\n        siren:id                  \"search:16c37040-8483-11e9-a489-13a83bc6e842\" ;\n        siren:indexPattern        \"index-pattern:150aead0-8483-11e9-b1ac-8541d07eaf10\" ;\n        siren:instanceLabelType   \"FIELD\" ;\n        siren:instanceLabelValue  \"venue.keyword\" ;\n        siren:parentId            \"null\" ;\n        siren:shortDescr          \"Data+Containing+Venues\" ;\n        siren:type                \"SAVED_SEARCH\" .\n\n<http://siren.io/model#search%3Aab764d70-8483-11e9-a489-13a83bc6e842>\n        a                         owl:Class ;\n        rdfs:label                \"Phrase\"@en ;\n        siren:color               \"#21ced9\" ;\n        siren:icon                \"fas fa-language\" ;\n        siren:id                  \"search:ab764d70-8483-11e9-a489-13a83bc6e842\" ;\n        siren:indexPattern        \"index-pattern:a9bb2ff0-8483-11e9-b1ac-8541d07eaf10\" ;\n        siren:instanceLabelType   \"FIELD\" ;\n        siren:instanceLabelValue  \"bigrams\" ;\n        siren:parentId            \"null\" ;\n        siren:shortDescr          \"Data+Containing+Phrases\" ;\n        siren:type                \"SAVED_SEARCH\" .\n\nsiren:shortDescr  a  owl:AnnotationProperty .\n\nsiren:single_value  a  owl:AnnotationProperty .\n\nsiren:f493b445-43bf-4c76-8829-f90b686456e8\n        a                owl:ObjectProperty ;\n        rdfs:domain      <http://siren.io/model#search%3A6c2ec490-8482-11e9-a489-13a83bc6e842> ;\n        rdfs:label       \"AUTHORED BY\"@en ;\n        rdfs:range       <http://siren.io/model#search%3A484ad730-8482-11e9-a489-13a83bc6e842> ;\n        siren:id         \"f493b445-43bf-4c76-8829-f90b686456e8\" ;\n        siren:in_field   \"author_md5.keyword\" ;\n        siren:out_field  \"related_entities_md5.keyword\" ;\n        siren:timeout    \"-1\" ;\n        owl:inverseOf    siren:ed66ebe3-d706-48ad-8378-519e1a56a511 .\n\nsiren:a4226acd-329d-4a16-b70f-e57d5ddc395f\n        a                owl:ObjectProperty ;\n        rdfs:domain      <http://siren.io/model#search%3Ad0760080-8482-11e9-a489-13a83bc6e842> ;\n        rdfs:label       \"PUBLISHED\"@en ;\n        rdfs:range       <http://siren.io/model#search%3A6c2ec490-8482-11e9-a489-13a83bc6e842> ;\n        siren:id         \"a4226acd-329d-4a16-b70f-e57d5ddc395f\" ;\n        siren:in_field   \"related_entities_md5.keyword\" ;\n        siren:out_field  \"publisher_md5.keyword\" ;\n        siren:timeout    \"-1\" ;\n        owl:inverseOf    siren:58321afc-2f36-4a29-b92b-2c9c5aa53525 .\n\nsiren:9a448844-d21d-4fd6-a3b6-b4d83dcf9853\n        a                owl:ObjectProperty ;\n        rdfs:domain      <http://siren.io/model#search%3A8f8c0050-8483-11e9-a489-13a83bc6e842> ;\n        rdfs:label       \"Faculty Of\"@en ;\n        rdfs:range       <http://siren.io/model#search%3A484ad730-8482-11e9-a489-13a83bc6e842> ;\n        siren:id         \"9a448844-d21d-4fd6-a3b6-b4d83dcf9853\" ;\n        siren:in_field   \"related_entities_md5.keyword\" ;\n        siren:out_field  \"organisation_md5.keyword\" ;\n        siren:timeout    \"-1\" ;\n        owl:inverseOf    siren:034698e5-d2ab-4e6b-962e-9ce27920e4fc .\n\nsiren:58321afc-2f36-4a29-b92b-2c9c5aa53525\n        a                owl:ObjectProperty ;\n        rdfs:domain      <http://siren.io/model#search%3A6c2ec490-8482-11e9-a489-13a83bc6e842> ;\n        rdfs:label       \"PUBLISHED BY\"@en ;\n        rdfs:range       <http://siren.io/model#search%3Ad0760080-8482-11e9-a489-13a83bc6e842> ;\n        siren:id         \"58321afc-2f36-4a29-b92b-2c9c5aa53525\" ;\n        siren:in_field   \"publisher_md5.keyword\" ;\n        siren:out_field  \"related_entities_md5.keyword\" ;\n        siren:timeout    \"-1\" ;\n        owl:inverseOf    siren:a4226acd-329d-4a16-b70f-e57d5ddc395f .\n\nsiren:primary_key  a  owl:AnnotationProperty .\n\nsiren:in_field  a  owl:AnnotationProperty .\n\nsiren:28502761-f942-48c7-b442-c8ff2099ccb6\n        a                owl:ObjectProperty ;\n        rdfs:domain      <http://siren.io/model#search%3A77559370-8483-11e9-a489-13a83bc6e842> ;\n        rdfs:label       \"STUDIED IN\"@en ;\n        rdfs:range       <http://siren.io/model#search%3A6c2ec490-8482-11e9-a489-13a83bc6e842> ;\n        siren:id         \"28502761-f942-48c7-b442-c8ff2099ccb6\" ;\n        siren:in_field   \"related_entities_md5.keyword\" ;\n        siren:out_field  \"field_md5.keyword\" ;\n        siren:timeout    \"-1\" ;\n        owl:inverseOf    siren:3e9a0b9d-1333-4d13-b634-7d2615bc70be .\n\n<http://siren.io/model#search%3Ad0760080-8482-11e9-a489-13a83bc6e842>\n        a                         owl:Class ;\n        rdfs:label                \"Publisher\"@en ;\n        siren:color               \"#542cc7\" ;\n        siren:icon                \"far fa-books\" ;\n        siren:id                  \"search:d0760080-8482-11e9-a489-13a83bc6e842\" ;\n        siren:indexPattern        \"index-pattern:ceb45350-8482-11e9-b1ac-8541d07eaf10\" ;\n        siren:instanceLabelType   \"FIELD\" ;\n        siren:instanceLabelValue  \"publisher.keyword\" ;\n        siren:parentId            \"null\" ;\n        siren:shortDescr          \"Data+containing+Publishers\" ;\n        siren:type                \"SAVED_SEARCH\" .\n\nsiren:cbc07e17-6040-48f1-a184-30dcf19fe241\n        a                owl:ObjectProperty ;\n        rdfs:domain      <http://siren.io/model#search%3A34cf8bf0-8483-11e9-a489-13a83bc6e842> ;\n        rdfs:label       \"PRESENTED\"@en ;\n        rdfs:range       <http://siren.io/model#search%3A6c2ec490-8482-11e9-a489-13a83bc6e842> ;\n        siren:id         \"cbc07e17-6040-48f1-a184-30dcf19fe241\" ;\n        siren:in_field   \"related_entities_md5.keyword\" ;\n        siren:out_field  \"volume_issue_md5.keyword\" ;\n        siren:timeout    \"-1\" ;\n        owl:inverseOf    siren:7648b8a7-a8fd-457f-91a4-e1a1b6dc5276 .\n\n<http://siren.io/model#search%3A34cf8bf0-8483-11e9-a489-13a83bc6e842>\n        a                         owl:Class ;\n        rdfs:label                \"Volume%2FIssue\"@en ;\n        siren:color               \"#2c86c7\" ;\n        siren:icon                \"fas fa-books\" ;\n        siren:id                  \"search:34cf8bf0-8483-11e9-a489-13a83bc6e842\" ;\n        siren:indexPattern        \"index-pattern:32cbccb0-8483-11e9-b1ac-8541d07eaf10\" ;\n        siren:instanceLabelType   \"FIELD\" ;\n        siren:instanceLabelValue  \"volume_issue.keyword\" ;\n        siren:parentId            \"null\" ;\n        siren:shortDescr          \"Data+Containing+a+Combination+of+Volumena+nd+Issue\" ;\n        siren:type                \"SAVED_SEARCH\" .\n\nsiren:bf0f95c2-3659-4fb7-a432-92cfc74fedca\n        a                owl:ObjectProperty ;\n        rdfs:domain      <http://siren.io/model#search%3A6c2ec490-8482-11e9-a489-13a83bc6e842> ;\n        rdfs:label       \"CITES\"@en ;\n        rdfs:range       <http://siren.io/model#search%3A6c2ec490-8482-11e9-a489-13a83bc6e842> ;\n        siren:id         \"bf0f95c2-3659-4fb7-a432-92cfc74fedca\" ;\n        siren:in_field   \"title_md5.keyword\" ;\n        siren:out_field  \"related_entities_md5.keyword\" ;\n        siren:timeout    \"-1\" ;\n        owl:inverseOf    siren:2145d52a-db65-41f2-80fd-053d2bc6b19b .\n\nsiren:out_field  a  owl:AnnotationProperty .\n\n<http://siren.io/model#search%3Aa33de690-846f-11e9-ab8f-4737c8be8ed5>\n        a                   owl:Class ;\n        rdfs:label          \"Staging+Data\"@en ;\n        siren:color         \"#00ffd1\" ;\n        siren:icon          \"fas fa-circle-notch\" ;\n        siren:id            \"search%3Aa33de690-846f-11e9-ab8f-4737c8be8ed5\" ;\n        siren:indexPattern  \"index-pattern:a19566b0-846f-11e9-96f4-fb17f00fafe1\" ;\n        siren:parentId      \"null\" ;\n        siren:primary_key   \"_id\" ;\n        siren:shortDescr    \"This+index+contains+staging+data+for+debugging+purposes\" ;\n        siren:type          \"SAVED_SEARCH\" .\n\nsiren:2145d52a-db65-41f2-80fd-053d2bc6b19b\n        a                owl:ObjectProperty ;\n        rdfs:domain      <http://siren.io/model#search%3A6c2ec490-8482-11e9-a489-13a83bc6e842> ;\n        rdfs:label       \"CITED BY\"@en ;\n        rdfs:range       <http://siren.io/model#search%3A6c2ec490-8482-11e9-a489-13a83bc6e842> ;\n        siren:id         \"2145d52a-db65-41f2-80fd-053d2bc6b19b\" ;\n        siren:in_field   \"related_entities_md5.keyword\" ;\n        siren:out_field  \"title_md5.keyword\" ;\n        siren:timeout    \"-1\" ;\n        owl:inverseOf    siren:bf0f95c2-3659-4fb7-a432-92cfc74fedca .\n\nsiren:3bdd8c96-dab2-47d4-a53c-d35571bfb447\n        a                owl:ObjectProperty ;\n        rdfs:domain      <http://siren.io/model#search%3A573d2d00-8483-11e9-a489-13a83bc6e842> ;\n        rdfs:label       \"PUBLISHING YEAR\"@en ;\n        rdfs:range       <http://siren.io/model#search%3A6c2ec490-8482-11e9-a489-13a83bc6e842> ;\n        siren:id         \"3bdd8c96-dab2-47d4-a53c-d35571bfb447\" ;\n        siren:in_field   \"related_entities_md5.keyword\" ;\n        siren:out_field  \"year_md5.keyword\" ;\n        siren:timeout    \"-1\" ;\n        owl:inverseOf    siren:074eed49-9ee5-4ec3-aa6f-bc9011148f94 .\n\nsiren:3e9a0b9d-1333-4d13-b634-7d2615bc70be\n        a                owl:ObjectProperty ;\n        rdfs:domain      <http://siren.io/model#search%3A6c2ec490-8482-11e9-a489-13a83bc6e842> ;\n        rdfs:label       \"COVERS\"@en ;\n        rdfs:range       <http://siren.io/model#search%3A77559370-8483-11e9-a489-13a83bc6e842> ;\n        siren:id         \"3e9a0b9d-1333-4d13-b634-7d2615bc70be\" ;\n        siren:in_field   \"field_md5.keyword\" ;\n        siren:out_field  \"related_entities_md5.keyword\" ;\n        siren:timeout    \"-1\" ;\n        owl:inverseOf    siren:28502761-f942-48c7-b442-c8ff2099ccb6 .\n\nsiren:7648b8a7-a8fd-457f-91a4-e1a1b6dc5276\n        a                owl:ObjectProperty ;\n        rdfs:domain      <http://siren.io/model#search%3A6c2ec490-8482-11e9-a489-13a83bc6e842> ;\n        rdfs:label       \"PRESENTED BY\"@en ;\n        rdfs:range       <http://siren.io/model#search%3A34cf8bf0-8483-11e9-a489-13a83bc6e842> ;\n        siren:id         \"7648b8a7-a8fd-457f-91a4-e1a1b6dc5276\" ;\n        siren:in_field   \"volume_issue_md5.keyword\" ;\n        siren:out_field  \"related_entities_md5.keyword\" ;\n        siren:timeout    \"-1\" ;\n        owl:inverseOf    siren:cbc07e17-6040-48f1-a184-30dcf19fe241 .\n\n<http://siren.io/model#search%3A8f8c0050-8483-11e9-a489-13a83bc6e842>\n        a                         owl:Class ;\n        rdfs:label                \"Organisation\"@en ;\n        siren:color               \"#d92163\" ;\n        siren:icon                \"fas fa-university\" ;\n        siren:id                  \"search:8f8c0050-8483-11e9-a489-13a83bc6e842\" ;\n        siren:indexPattern        \"index-pattern:8dd2b790-8483-11e9-b1ac-8541d07eaf10\" ;\n        siren:instanceLabelType   \"FIELD\" ;\n        siren:instanceLabelValue  \"organisation_name\" ;\n        siren:parentId            \"null\" ;\n        siren:shortDescr          \"Data+Containing+Organisations\" ;\n        siren:type                \"SAVED_SEARCH\" .\n\n<http://siren.io/model#search%3A6c2ec490-8482-11e9-a489-13a83bc6e842>\n        a                         owl:Class ;\n        rdfs:label                \"Paper\"@en ;\n        siren:color               \"#2c98c7\" ;\n        siren:icon                \"fas fa-file-signature\" ;\n        siren:id                  \"search:6c2ec490-8482-11e9-a489-13a83bc6e842\" ;\n        siren:indexPattern        \"index-pattern:6a40fe50-8482-11e9-b1ac-8541d07eaf10\" ;\n        siren:instanceLabelType   \"FIELD\" ;\n        siren:instanceLabelValue  \"title\" ;\n        siren:parentId            \"null\" ;\n        siren:shortDescr          \"Data+Containing+Papers\" ;\n        siren:type                \"SAVED_SEARCH\" .\n\nsiren:18158a4b-fc21-4fda-977c-1a184f2988b0\n        a                owl:ObjectProperty ;\n        rdfs:domain      <http://siren.io/model#search%3Aab764d70-8483-11e9-a489-13a83bc6e842> ;\n        rdfs:label       \"MENTIONED IN\"@en ;\n        rdfs:range       <http://siren.io/model#search%3A6c2ec490-8482-11e9-a489-13a83bc6e842> ;\n        siren:id         \"18158a4b-fc21-4fda-977c-1a184f2988b0\" ;\n        siren:in_field   \"related_entities_md5.keyword\" ;\n        siren:out_field  \"bigrams_md5.keyword\" ;\n        siren:timeout    \"-1\" ;\n        owl:inverseOf    siren:92b784d1-0d72-4563-a4e8-f68f162f3dca .\n\nsiren:752e239e-4f37-407a-9cbb-109e6a0daeb7\n        a                owl:ObjectProperty ;\n        rdfs:domain      <http://siren.io/model#search%3A6c2ec490-8482-11e9-a489-13a83bc6e842> ;\n        rdfs:label       \"PRESENTED IN\"@en ;\n        rdfs:range       <http://siren.io/model#search%3A16c37040-8483-11e9-a489-13a83bc6e842> ;\n        siren:id         \"752e239e-4f37-407a-9cbb-109e6a0daeb7\" ;\n        siren:in_field   \"venue_md5.keyword\" ;\n        siren:out_field  \"related_entities_md5.keyword\" ;\n        siren:timeout    \"-1\" ;\n        owl:inverseOf    siren:ec6cb221-f6c4-4e0d-913f-ff52347b7d6c .\n\n<http://siren.io/model#search%3Acbc469e0-8483-11e9-a489-13a83bc6e842>\n        a                         owl:Class ;\n        rdfs:label                \"Keyword\"@en ;\n        siren:color               \"#21d9a2\" ;\n        siren:icon                \"fas fa-tags\" ;\n        siren:id                  \"search:cbc469e0-8483-11e9-a489-13a83bc6e842\" ;\n        siren:indexPattern        \"index-pattern:ca0bbd60-8483-11e9-b1ac-8541d07eaf10\" ;\n        siren:instanceLabelType   \"FIELD\" ;\n        siren:instanceLabelValue  \"keyword\" ;\n        siren:parentId            \"null\" ;\n        siren:shortDescr          \"Data+Containing+Specified+Keywords\" ;\n        siren:type                \"SAVED_SEARCH\" .\n\nsiren:b3954c2c-046f-44bc-a67d-f16483ebb192\n        a                owl:ObjectProperty ;\n        rdfs:domain      <http://siren.io/model#search%3A6c2ec490-8482-11e9-a489-13a83bc6e842> ;\n        rdfs:label       \"MENTIONS\"@en ;\n        rdfs:range       <http://siren.io/model#search%3Acbc469e0-8483-11e9-a489-13a83bc6e842> ;\n        siren:id         \"b3954c2c-046f-44bc-a67d-f16483ebb192\" ;\n        siren:in_field   \"keyword_md5.keyword\" ;\n        siren:out_field  \"related_entities_md5.keyword\" ;\n        siren:timeout    \"-1\" ;\n        owl:inverseOf    siren:e242b75f-09f8-4e72-a206-82186980fb1a .\n\nsiren:in_field_descr  a  owl:AnnotationProperty .\n\nsiren:out_field_descr\n        a       owl:AnnotationProperty .\n\nsiren:92b784d1-0d72-4563-a4e8-f68f162f3dca\n        a                owl:ObjectProperty ;\n        rdfs:domain      <http://siren.io/model#search%3A6c2ec490-8482-11e9-a489-13a83bc6e842> ;\n        rdfs:label       \"MENTIONS\"@en ;\n        rdfs:range       <http://siren.io/model#search%3Aab764d70-8483-11e9-a489-13a83bc6e842> ;\n        siren:id         \"92b784d1-0d72-4563-a4e8-f68f162f3dca\" ;\n        siren:in_field   \"bigrams_md5.keyword\" ;\n        siren:out_field  \"related_entities_md5.keyword\" ;\n        siren:timeout    \"-1\" ;\n        owl:inverseOf    siren:18158a4b-fc21-4fda-977c-1a184f2988b0 .\n\nsiren:034698e5-d2ab-4e6b-962e-9ce27920e4fc\n        a                owl:ObjectProperty ;\n        rdfs:domain      <http://siren.io/model#search%3A484ad730-8482-11e9-a489-13a83bc6e842> ;\n        rdfs:label       \"Member Of\"@en ;\n        rdfs:range       <http://siren.io/model#search%3A8f8c0050-8483-11e9-a489-13a83bc6e842> ;\n        siren:id         \"034698e5-d2ab-4e6b-962e-9ce27920e4fc\" ;\n        siren:in_field   \"organisation_md5.keyword\" ;\n        siren:out_field  \"related_entities_md5.keyword\" ;\n        siren:timeout    \"-1\" ;\n        owl:inverseOf    siren:9a448844-d21d-4fd6-a3b6-b4d83dcf9853 .\n\nsiren:ec6cb221-f6c4-4e0d-913f-ff52347b7d6c\n        a                owl:ObjectProperty ;\n        rdfs:domain      <http://siren.io/model#search%3A16c37040-8483-11e9-a489-13a83bc6e842> ;\n        rdfs:label       \"PRESENTED\"@en ;\n        rdfs:range       <http://siren.io/model#search%3A6c2ec490-8482-11e9-a489-13a83bc6e842> ;\n        siren:id         \"ec6cb221-f6c4-4e0d-913f-ff52347b7d6c\" ;\n        siren:in_field   \"related_entities_md5.keyword\" ;\n        siren:out_field  \"venue_md5.keyword\" ;\n        siren:timeout    \"-1\" ;\n        owl:inverseOf    siren:752e239e-4f37-407a-9cbb-109e6a0daeb7 .\n\nsiren:color  a  owl:AnnotationProperty .\n\nsiren:longDescr  a  owl:AnnotationProperty .\n\nsiren:ed66ebe3-d706-48ad-8378-519e1a56a511\n        a                owl:ObjectProperty ;\n        rdfs:domain      <http://siren.io/model#search%3A484ad730-8482-11e9-a489-13a83bc6e842> ;\n        rdfs:label       \"AUTHORED\"@en ;\n        rdfs:range       <http://siren.io/model#search%3A6c2ec490-8482-11e9-a489-13a83bc6e842> ;\n        siren:id         \"ed66ebe3-d706-48ad-8378-519e1a56a511\" ;\n        siren:in_field   \"related_entities_md5.keyword\" ;\n        siren:out_field  \"author_md5.keyword\" ;\n        siren:timeout    \"-1\" ;\n        owl:inverseOf    siren:f493b445-43bf-4c76-8829-f90b686456e8 .\n",
      "version": 1
    }
  },
  {
    "_id": "script:Size-lens.-default-implementation",
    "_type": "script",
    "_source": {
      "title": "Size lens. - default implementation",
      "description": "Allows set the size for all nodes using an expression.",
      "scriptSource": "/*\n * Size lens. - default implementation\n *\n * f - refers to kibi helper with following functions available\n *   defaultExpansion(graphid, idList, relations)\n *   executeGremlinQuery(graphId, queryTemplate, idList)\n *   addResultsToGraph(graphId, queriedIds, results)\n *   executeEsSearch(index, type, body, size)\n *   getKibiRelations()\n *   openModal(graphId, title, innerHtml)\n *   handleModalResult(graphId, result)\n *   buildSelectEntityMenu(graphModel, precomputed, excludeTypes)\n *\n * Globals:\n *\n * - kibiTimezone: a string containing the value of the dateFormat:tz setting.\n * - moment: an instance of moment-timezone with the default timezone set to the value of the dateFormat:tz setting.\n * - jexl: instance of an Javascript Expression Language.\n * - mappedColors: an instance of a color mapping helper.\n * - fieldHelper: getFields - method to grab a list of fields for given indexPattern\n *                getFilterByEsType - method create an angular filter to filter out fields by esType\n *                flattenObj - method to flatten object properties usefull to flaten keys of nested es objects\n *\n * For detailed documentation of the above please contact support team\n *\n * NOTE:\n *   Use ECMAScript 5\n *   The name of the main function must be \"onGraphUpdate\"\n *   The function should always return a promise which resolves\n *   with a modified graph model\n *   The lens definition must be in a \"getLensDefinition\" function.\n *   The lens should always contain a \"setParams\" function, used during the lenses execution.\n */\n\nvar _parameters = {\n  entityId: '__$$ALL$__',\n  entityIdSet: new Set(),\n  expression: '',\n  low: 0.5,\n  high: 2.5,\n  sizeScale: 'linear',\n  liveUpdate: true,\n  selection: [],\n  methods: {},\n  legendTooltip: false\n};\n\nfunction getLensDefinition(graphId, graphModel, selection, precomputed) {\n  var html = '<label>Entity Type</label>';\n  let entities = [];\n  html += f.buildSelectEntityMenu(graphModel, precomputed, entities);\n\n  html    += '<expression-editor label=\"\\'Expression\\'\" required-field=\"true\" error-message=\"data.errorMessages.expression\"';\n  html    += ' entity-id=\"params.entityId\" entity-id-set=\"data.entityIdSet\" expression=\"params.expression\"></expression-editor>';\n\n  html    += '<label>Size scale</label>';\n  html    += '<select class=\"form-control\" ng-class=\"{ \\'required-field\\': !params.sizeScale }\" ng-model=\"params.sizeScale\">';\n  html    += '<option value=\"linear\">Linear</option>';\n  html    += '<option value=\"log\">Log</option>';\n  html    += '<option value=\"sqrt\">Square root</option>';\n  html    += '</select>';\n\n  html    += '<label>Size range</label>';\n  html    += '<rzslider rz-slider-model=\"params.low\" rz-slider-high=\"params.high\" rz-slider-options=\"data.sizeRangeSlider\"></rzslider>';\n\n  html    += '<label><input type=\"checkbox\" class=\"kuiCheckBox\" ng-model=\"params.legendTooltip\"> Legend tooltip</label>';\n\n  var sizeRangeSlider = {\n    floor: 0,\n    ceil: 6,\n    step: 0.1,\n    precision: 2,\n    showTicks: 1,\n    showTicksValues: true\n  };\n\n  return Promise.resolve({\n    displayName: 'Size from expression',\n    type: 'Size',\n    template: html,\n    params: _parameters,\n    data: {\n      entityIdSet: precomputed.entityIdSet,\n      sizeRangeSlider: sizeRangeSlider,\n      entities: entities\n    }\n  });\n}\n\nfunction setParams(params) {\n  _parameters = params;\n}\n\nfunction checkParams(params, graphModel) {\n  var entityId = params.entityId;\n  var expression = params.expression.replace(/\\n\\r?/g, ' ');\n  var proms = [];\n  if (!_.isEmpty(expression)) {\n    // force jexl to generate a string response\n    expression = '\\'\\'+' + expression;\n    const node = graphModel.nodes[0];\n    if ( node && (entityId === '__$$ALL$__' || node.entityId === entityId)) {\n      proms.push(jexl.eval(expression, node).then(function (res) {\n      }).catch(function (reason) {\n        graphModel.errorMessages[lens.id] = {\n          model: 'expression',\n          reason: reason\n        };\n        return Promise.resolve();\n      }));\n    }\n  }\n  return Promise.all(proms)\n  .then(function () {\n    return graphModel;\n  });\n}\n\nfunction onGraphUpdate(graphId, graphModel) {\n  var entityId = _parameters.entityId;\n  var min = Number.POSITIVE_INFINITY;\n  var max = Number.NEGATIVE_INFINITY;\n  var expression = _parameters.expression.replace(/\\n\\r?/g, ' ');\n  var sizeScale = _parameters.sizeScale;\n  var minSize = _parameters.low;\n  var maxSize = _parameters.high;\n  var proms = [];\n  var lensDisplayName = lens && lens.state && lens.state.displayName ? lens.state.displayName : 'Advanced lens';\n  var legendTooltip = _parameters.legendTooltip;\n\n  if (!_.isEmpty(expression)) {\n    _.each(graphModel.nodes, function (node) {\n      if (entityId === '__$$ALL$__' || node.entityId === entityId) {\n        proms.push(jexl.eval(expression, node).then(function (res) {\n          if (_.isFinite(res)) {\n            node.size = +res;\n            min = Math.min(min, node.size);\n            max = Math.max(max, node.size);\n          } else {\n            node.size = undefined;\n          }\n        }).catch(function (reason) {\n          graphModel.errorMessages[lens.id] = {\n            model: 'expression',\n            reason: reason\n          };\n          return Promise.resolve();\n        }));\n      }\n    });\n  }\n\n  return Promise.all(proms)\n  .then(function () {\n    _.each(graphModel.nodes, function (node) {\n      if (entityId === '__$$ALL$__' || node.entityId === entityId) {\n        if (legendTooltip) {\n          node.legendTooltip.push({\n            title: lensDisplayName,\n            reference: expression,\n            value: node.size === undefined ? '<i><undefined></i>' : node.size\n          });\n        }\n        if (node.size === undefined) {\n          node.size = 0.5 * (maxSize - minSize);\n        }\n        if (sizeScale === 'log') {\n          node.size = minSize + (maxSize - minSize) * Math.log(node.size - min + 1) / Math.log(max - min + 1);\n        } else if (sizeScale === 'sqrt') {\n          node.size = minSize + (maxSize - minSize) * Math.sqrt(node.size - min) / Math.sqrt(max - min);\n        } else {\n          node.size = minSize + (maxSize - minSize) * (node.size - min + 1) / (max - min + 1);\n        }\n\n        node.size = node.size < minSize ? minSize : node.size;\n      }\n    });\n    return graphModel;\n  });\n}\n",
      "version": 2,
      "type": "lens"
    }
  },
  {
    "_id": "script:Advanced-lens.-default-implementation",
    "_type": "script",
    "_source": {
      "title": "Advanced lens. - default implementation",
      "description": "Allows set node properties using expressions.",
      "scriptSource": "/*\n * Advanced lens. - default implementation\n *\n * f - refers to kibi helper with following functions available\n *   defaultExpansion(graphid, idList, relations)\n *   executeGremlinQuery(graphId, queryTemplate, idList)\n *   addResultsToGraph(graphId, queriedIds, results)\n *   executeEsSearch(index, type, body, size)\n *   getKibiRelations()\n *   openModal(graphId, title, innerHtml)\n *   handleModalResult(graphId, result)\n *   buildSelectEntityMenu(graphModel, precomputed, excludeTypes)\n *\n * Globals:\n *\n * - kibiTimezone: a string containing the value of the dateFormat:tz setting.\n * - moment: an instance of moment-timezone with the default timezone set to the value of the dateFormat:tz setting.\n * - jexl: instance of an Javascript Expression Language.\n * - mappedColors: an instance of a color mapping helper.\n * - fieldHelper: getFields - method to grab a list of fields for given indexPattern\n *                getFilterByEsType - method create an angular filter to filter out fields by esType\n *                flattenObj - method to flatten object properties usefull to flaten keys of nested es objects\n *\n * For detailed documentation of the above please contact support team\n *\n * NOTE:\n *   Use ECMAScript 5\n *   The name of the main function must be \"onGraphUpdate\"\n *   The function should always return a promise which resolves\n *   with a modified graph model\n *   The lens definition must be in a \"getLensDefinition\" function.\n *   The lens should always contain a \"setParams\" function, used during the lenses execution.\n */\n\nvar _parameters = {\n  entityId: '__$$ALL$__',\n  entityIdSet: new Set(),\n  condition: '',\n  expression: '',\n  modelProperty: '',\n  liveUpdate: true,\n  when: 'always',\n  selection: [],\n  methods: {}\n};\n\nfunction getLensDefinition(graphId, graphModel, selection, precomputed) {\n  var html = '<label>Entity Type</label>';\n  let entities = [];\n  html += f.buildSelectEntityMenu(graphModel, precomputed, entities);\n\n  html    += '<label>If ...</label>';\n\n  html    += '<br><label><input type=\"radio\" value=\"always\" ng-model=\"params.when\">always</label>';\n\n  html    += '<br><input type=\"radio\" value=\"selection\" ng-model=\"params.when\">';\n  html    += '<label>only for the {{ params.selection.length }} selected elements.</label>';\n  html    += '<button ng-hide=\"params.when !== \\'selection\\'\" ng-click=\"params.methods.updateSelection()\">';\n  html    += ' <i class=\"fa fa-sync\"></i>';\n  html    += '</button><span> </span>';\n  html    += '<button ng-hide=\"params.when !== \\'selection\\'\" ng-click=\"params.methods.showSelection()\"><i class=\"fa fa-eye\"></i></button>';\n\n  html    += '<br><input type=\"radio\" value=\"conditional\" ng-model=\"params.when\">';\n  html    += '<label>only if the condition is true</label>';\n  html    += '<expression-editor entity-id-set=\"data.entityIdSet\" required-field=\"params.when === \\'conditional\\'\"';\n  html    += ' ng-hide=\"params.when !== \\'conditional\\'\" ';\n  html    += ' type=\"params.entityId\" expression=\"params.condition\" error-message=\"data.errorMessages.condition\">';\n  html    += '</expression-editor>';\n\n  html    += '<br><label>Set this property</label>';\n  html    += '<model-property-selector property=\"params.modelProperty\"';\n  html    += ' required-field=\"true\" changed=\"params.methods.propertyChanged(prop)\">';\n  html    += '</model-property-selector>';\n  html    += '<label>To</label>';\n  html    += '<expression-editor entity-id-set=\"data.entityIdSet\" disabled=\"!params.modelProperty\"';\n  html    += ' required-field=\"true\" error-message=\"data.errorMessages.expression\"';\n  html    += ' type=\"params.entityId\" expression=\"params.expression\">';\n  html    += '</expression-editor>';\n\n  _parameters.selection = selection;\n  _parameters.methods = {\n    propertyChanged: function (prop) {\n      this.params.expression = prop.default;\n    },\n    showSelection: function () {\n      this.loadItems({ selection: this.params.selection });\n    },\n    updateSelection: function () {\n      this.params.selection = _.filter(this.getSelection(), function (id) {\n        // check if the id has the syntax of a node\n        return id.split('/').length === 3;\n      });\n    }\n  };\n\n  return Promise.resolve({\n    displayName: 'Advanced lens',\n    type: 'Advanced',\n    template: html,\n    params: _parameters,\n    data: {\n      entityIdSet: precomputed.entityIdSet,\n      currentSelection: selection,\n      entities: entities\n    }\n  });\n}\n\nfunction setParams(params) {\n  _parameters = params;\n}\n\nfunction checkParams(params, graphModel) {\n  var entityId = params.entityId;\n  var expression = params.expression.replace(/\\n\\r?/g, ' ');\n  var proms = [];\n  if (!_.isEmpty(expression)) {\n    // force jexl to generate a string response\n    expression = '\\'\\'+' + expression;\n    const node = graphModel.nodes[0];\n    if ( node && (entityId === '__$$ALL$__' || node.entityId === entityId)) {\n      proms.push(jexl.eval(expression, node).then(function (res) {\n      }).catch(function (reason) {\n        graphModel.errorMessages[lens.id] = {\n          model: 'expression',\n          reason: reason\n        };\n        return Promise.resolve();\n      }));\n    }\n  }\n  return Promise.all(proms)\n  .then(function () {\n    return graphModel;\n  });\n}\n\nfunction onGraphUpdate(graphId, graphModel) {\n  var entityId = _parameters.entityId;\n  var condition = _parameters.condition.replace(/\\n\\r?/g, ' ');\n  var expression = _parameters.expression.replace(/\\n\\r?/g, ' ');\n  var prop = _parameters.modelProperty;\n  var proms = [];\n  var selection = _parameters.selection;\n  var when = _parameters.when;\n  var lensDisplayName = lens && lens.state && lens.state.displayName ? lens.state.displayName : 'Advanced lens';\n\n  function parseDate(date, timezone) {\n    return moment.tz(date, 'YYYY-MM-DD HH:mm:SS', timezone);\n  }\n\n  var referencePrefix;\n\n  if (when === 'always') {\n    condition = 'true';\n    referencePrefix = when;\n  } else if (when === 'selection') {\n    condition = 'false';\n    referencePrefix = 'for ' + when;\n  } else {\n    referencePrefix = 'when ' + condition;\n  }\n\n  if (!_.isEmpty(expression) && !_.isEmpty(condition) && prop && !_.isEmpty(prop.name)) {\n    if (prop.type === 'string') {\n      // force jexl to generate a string response\n      expression = '\\'\\'+' + expression;\n    }\n    _.each(graphModel.nodes, function (node) {\n      if (entityId === '__$$ALL$__'\n          || (node.entityId === entityId)) {\n        if (when === 'selection') {\n          var filtered = selection.filter(function (item) {\n            if (item === node.id) {\n              return true;\n            }\n            return false;\n          });\n          condition = filtered.length ? 'true' : 'false';\n        }\n        proms.push(jexl.eval(condition, node).then(function (condResult) {\n          if (condResult && _.isBoolean(condResult)) {\n            return jexl.eval(expression, node).then(function (res) {\n              if (prop.type === 'boolean' && _.isBoolean(res)) {\n                node[prop.name] = res;\n              } else if (prop.type === 'number' && _.isFinite(res)) {\n                node[prop.name] = res;\n              } else if (prop.type === 'array' && _.isString(res)) {\n                var arrRes = JSON.parse(res);\n                if (_.isArray(arrRes)) {\n                  if (prop.name === 'glyphs') {\n                    const property = node[prop.name] ? node[prop.name] : [];\n                    node[prop.name] = property.concat(arrRes);\n                  } else {\n                    node[prop.name] = arrRes;\n                  };\n                }\n              } else if (prop.type === 'location' && _.isString(res)) {\n                var latLong = res.split(',');\n                node[prop.name] = {\n                  lat: +latLong[0],\n                  lng: +latLong[1]\n                };\n              } else if (prop.type === 'time' && _.isString(res)) {\n                var momentTime = parseDate(res, 'UTC');\n                if (momentTime) {\n                  node[prop.name] = momentTime.valueOf()\n                    - moment.tz.zone(kibiTimezone).utcOffset(momentTime.valueOf()) * 60000;\n                }\n              } else if (prop.type === 'string' && _.isString(res)) {\n                node[prop.name] = res.replace(/\\\\n/, '\\n');\n              }\n            }).catch(function (reason) {\n              graphModel.errorMessages[lens.id] = {\n                model: 'expression',\n                reason: reason\n              };\n              return Promise.resolve();\n            });\n          }\n          return Promise.resolve();\n        }).catch(function (reason) {\n          graphModel.errorMessages[lens.id] = {\n            model: 'condition',\n            reason: reason\n          };\n          return Promise.resolve();\n        }));\n      }\n    });\n  }\n\n  return Promise.all(proms)\n  .then(function () {\n    return graphModel;\n  });\n}\n",
      "version": 2,
      "type": "lens"
    }
  },
  {
    "_id": "script:Show-record-content-on-tooltips-lens.-default-implementation",
    "_type": "script",
    "_source": {
      "title": "Show record content on tooltips lens. - default implementation",
      "description": "It will show a representation of all data related to node",
      "scriptSource": "/*\n * Show record content on tooltips lens. - default implementation\n *\n * f - refers to kibi helper with following functions available\n *   defaultExpansion(graphid, idList, relations)\n *   executeGremlinQuery(graphId, queryTemplate, idList)\n *   addResultsToGraph(graphId, queriedIds, results)\n *   executeEsSearch(index, type, body, size)\n *   getKibiRelations()\n *   openModal(graphId, title, innerHtml)\n *   handleModalResult(graphId, result)\n *   buildSelectEntityMenu(graphModel, precomputed, excludeTypes)\n *\n * Globals:\n *\n * - kibiTimezone: a string containing the value of the dateFormat:tz setting.\n * - moment: an instance of moment-timezone with the default timezone set to the value of the dateFormat:tz setting.\n * - jexl: instance of an Javascript Expression Language.\n *\n * For detailed documentation of the above please contact support team\n *\n * NOTE:\n *   Use ECMAScript 5\n *   The name of the main function must be \"onGraphUpdate\"\n *   The function should always return a promise which resolves\n *   with a modified graph model\n *   The lens definition must be in a \"getLensDefinition\" function.\n */\n\nvar _parameters = {\n  entityId: '__$$ALL$__',\n  fieldName: 'id',\n  selection: [],\n  methods: {}\n};\n\nfunction getLensDefinition(graphId, graphModel, selection, precomputed) {\n  var html = '<label>Entity Type</label>';\n  let entities = [];\n  html += f.buildSelectEntityMenu(graphModel, precomputed, entities);\n\n  _parameters.methods = {\n    filterType: function (value) {\n      return this.params && this.params.entityId &&\n        (this.params.entityId === value.entityId || this.params.entityId === '__$$ALL$__');\n    }\n  };\n\n  return Promise.resolve({\n    displayName: 'Show record content on tooltips',\n    type: 'Tooltip',\n    template: html,\n    params: _parameters,\n    data: {\n      entities: entities\n    }\n  });\n}\n\nfunction setParams(params) {\n  _parameters = params;\n}\n\nfunction onGraphUpdate(graphId, graphModel) {\n  var entityId = _parameters.entityId;\n  var lensDisplayName = lens && lens.state && lens.state.displayName ? lens.state.displayName : 'Show record content on tooltips';\n\n  var rowIndex = 0;\n  function buildFieldValue(fieldKey, fieldValue) {\n    var fieldTooltip = '';\n    if (!_.isObject(fieldValue)) {\n      var rowClass = (rowIndex++ % 2 === 0) ? 'property-odd' : 'property-even';\n      fieldTooltip += '<div class=\"property-tooltips ' + rowClass + '\">';\n      fieldTooltip += '<div class=\"property-reference\">' + fieldKey + '</div>';\n      fieldTooltip += '<div class=\"property-value\">' + fieldValue + '</div>';\n    } else {\n      _.each(fieldValue, function (fieldSubvalue, fieldSubkey) {\n        fieldTooltip += buildFieldValue(fieldKey + '.' + fieldSubkey, fieldSubvalue);\n      });\n    }\n    return fieldTooltip;\n  }\n\n  _.each(graphModel.nodes, function (node) {\n    if (entityId === '__$$ALL$__' || node.entityId === entityId) {\n      if (!node.tooltip) {\n        node.tooltip = '';\n      }\n      node.tooltip += '<div class=\"lens-title\">' + lensDisplayName + '</div>';\n      var sortedPayload = {};\n      Object.keys(node.payload).sort().forEach(function (key) {\n        sortedPayload[key] = node.payload[key];\n      });\n      _.each(sortedPayload, function (value, key) {\n        node.tooltip += buildFieldValue(key, value);\n        node.tooltip += '</div>';\n      });\n    }\n  });\n\n  return Promise.resolve(graphModel);\n}\n",
      "version": 2,
      "type": "lens"
    }
  },
  {
    "_id": "script:Add-time-fields.-(works-only-with-Kibi-Demo-data)",
    "_type": "script",
    "_source": {
      "title": "Add time fields. (works only with Kibi Demo data)",
      "description": "Adds the time field to nodes to enable the timebar. (works only with Kibi Demo data)",
      "scriptSource": "/*\n * Add time fields. (works only with Kibi Demo data) - default implementation\n *\n * f - refers to kibi helper with following functions available\n *   defaultExpansion(graphid, idList, relations)\n *   executeGremlinQuery(graphId, queryTemplate, idList)\n *   addResultsToGraph(graphId, queriedIds, results)\n *   executeEsSearch(index, type, body, size)\n *   getKibiRelations()\n *   openModal(graphId, title, innerHtml)\n *   handleModalResult(graphId, result)\n *\n * Globals:\n *\n * - kibiTimezone: a string containing the value of the dateFormat:tz setting.\n * - moment: an instance of moment-timezone with the default timezone set to the value of the dateFormat:tz setting.\n *\n * For detailed documentation of the above please contact support team\n *\n * NOTE:\n *   Use ECMAScript 5\n *   The name of the main function must be \"onGraphUpdate\"\n *   The function should always return a promise which resolves\n *   with a modified graph model\n */\nfunction onGraphUpdate(graphId, kibiGraphModel) {\n  _.each(kibiGraphModel.nodes, function (node) {\n    let momentTime;\n\n    // Parses a date string in the specified timezone\n    function parseDate(date, timezone) {\n      return moment.tz(date, 'YYYY-MM-DD HH:mm:SS', timezone);\n    }\n\n    if (node.entityId === 'search:Company') {\n      if (node.payload.founded_date) {\n        momentTime = parseDate(node.payload.founded_date, 'UTC');\n      }\n    } else if (node.entityId === 'search:Investor') {\n      if (node.payload.founded_date) {\n        momentTime = parseDate(node.payload.founded_date, 'UTC');\n        if (momentTime.year() < 2000) {\n          momentTime.year(2000);\n        }\n      }\n    } else if (node.entityId === 'search:Investment') {\n      if (node.payload.funded_date) {\n        momentTime = parseDate(node.payload.funded_date, 'UTC');\n      }\n    } else if (node.entityId === 'search:Article') {\n      if (node.payload.pdate) {\n        momentTime = parseDate(node.payload.pdate, 'UTC');\n      }\n    }\n\n    if (momentTime) {\n      // To ensure that Graph Library displays localized in the timeline, we shift the UTC timestamp (momentTime.valueOf()) by the offset of the\n      // timezone on this date.\n      node.time = momentTime.valueOf() - moment.tz.zone(kibiTimezone).offset(momentTime.valueOf()) * 60000;\n    }\n  });\n\n  return Promise.resolve(kibiGraphModel);\n}\n",
      "version": 2,
      "type": "onGraphUpdate"
    }
  },
  {
    "_id": "script:Shortest-Path",
    "_type": "script",
    "_source": {
      "title": "Shortest Path",
      "description": "Tries to find the shortest path between two nodes.",
      "scriptSource": "/*\n * Shortest-Path\n *\n *\n * f - refers to kibi helper with following functions available\n *   defaultExpansion(graphid, idList, relations)\n *   executeGremlinQuery(graphId, queryTemplate, idList)\n *   addResultsToGraph(graphId, queriedIds, results)\n *   executeEsSearch(index, type, body, size)\n *   getKibiRelations()\n *   openModal(graphId, title, innerHtml)\n *   handleModalResult(graphId, result)\n *\n * For detailed documentation of the above please contact support team\n *\n * NOTE:\n *   Use ECMAScript 5\n *   The name of the main function must be \"beforeAll\"\n *   The function should always return a promise which resolves\n *   with a modified graph model\n */\nfunction beforeAll(graphId, graphModel, graphSelection) {\n  if (graphSelection.length === 2) {\n    let dd = '<select ng-options=\"i as i for i in [2,3,4]\" ng-model=\"maxSize\">';\n    dd = dd + '<option style=\"display:none\" value=\"\">select a number</option>';\n    dd = dd + '</select>';\n\n    f.openModal(graphId, 'Pick the max path length', dd);\n  } else {\n    alert('Warning: This script only works with 2 selected nodes');\n  }\n\n  return Promise.resolve(null);\n}\n\nfunction onModalOk(scope, graphModel) {\n  return scope.maxSize;\n}\n\nfunction afterModalClosed(graphId, graphModel, graphSelection, onOkModalResult) {\n  var i = 1;\n  return iterateQuery(graphId, i, graphSelection, onOkModalResult);\n}\n\nfunction iterateQuery(graphId, i, graphSelection, maxIteration) {\n  if (i <= maxIteration) {\n    let query = 'g.V($1).repeat(both().simplePath()).times(' + i + ').path()';\n\n    return f.executeGremlinQuery(graphId, query, graphSelection[0]).then(function (results) {\n      let shortestPath;\n      for (let i=0; i<results.length; i++) {\n        let path = results[i];\n        if (path.objects[path.objects.length-1].id === graphSelection[1]) {\n          shortestPath = path;\n          break;\n        }\n      }\n\n      if (shortestPath) {\n        f.addResultsToGraph(graphId, graphSelection, shortestPath);\n      } else {\n        i++;\n        return iterateQuery(graphId, i, graphSelection, maxIteration);\n      }\n    });\n  } else {\n    return Promise.resolve();\n  }\n}\n",
      "version": 2,
      "type": "contextual"
    }
  },
  {
    "_id": "script:Show-nodes-count-by-type",
    "_type": "script",
    "_source": {
      "title": "Show nodes count by type",
      "description": "Opens a popup showing the node types followed by their count.",
      "scriptSource": "/*\n * Show nodes count by type\n *\n *\n * f - refers to kibi helper with following functions available\n *   defaultExpansion(graphid, idList, relations)\n *   executeGremlinQuery(graphId, queryTemplate, idList)\n *   addResultsToGraph(graphId, queriedIds, results)\n *   executeEsSearch(index, type, body, size)\n *   getKibiRelations()\n *   openModal(graphId, title, innerHtml)\n *   handleModalResult(graphId, result)\n *\n * For detailed documentation of the above please contact support team\n *\n * NOTE:\n *   Use ECMAScript 5\n *   The name of the main function must be \"beforeAll\"\n *   The function should always return a promise which resolves\n *   with a modified graph model\n */\nfunction beforeAll(graphId, graphModel, graphSelection) {\n  let typeCounter = {};\n  return f.getInvestigateEntities()\n  .then(function (entities) {\n\n    _.each(graphModel.nodes, function (node) {\n      if (typeCounter[node.entityId]) {\n        typeCounter[node.entityId].count = typeCounter[node.entityId].count + 1;\n      } else {\n        var entity = _.find(entities, { id: node.entityId });\n        typeCounter[node.entityId] = {\n          label: entity.label,\n          count: 1\n        };\n      }\n    });\n\n    let prettyString = '<ul>';\n    for (var key in typeCounter) {\n      if (typeCounter.hasOwnProperty(key)) {\n        prettyString = prettyString + '<li>';\n        prettyString = prettyString + typeCounter[key].label + ': ' + typeCounter[key].count;\n        prettyString = prettyString + '</li>';\n      }\n    }\n    prettyString = prettyString + '</ul>';\n\n    f.openModal(graphId, 'Number of nodes in the current graph', prettyString);\n  });\n}\n\nfunction afterModalClosed() {\n  return null;\n}\n",
      "version": 2,
      "type": "contextual"
    }
  },
  {
    "_id": "script:Add-geo-locations-for-map-visualization.-(works-only-with-Kibi-Demo-data)",
    "_type": "script",
    "_source": {
      "title": "Add geo-locations for map visualization.  (works only with Kibi Demo data)",
      "description": "Adds the geopoint to nodes to enable the map view.  (works only with Kibi Demo data)",
      "scriptSource": "/*\n * Add geo locations for map visualization. (works only with Kibi Demo data)\\r\n *\n * f - refers to kibi helper with following functions available\\r\n *   defaultExpansion(graphid, idList, relations)\\r\n *   executeGremlinQuery(graphId, queryTemplate, idList)\\r\n *   addResultsToGraph(graphId, queriedIds, results)\\r\n *   executeEsSearch(index, type, body, size)\\r\n *   getKibiRelations()\\r\n *   openModal(graphId, title, innerHtml)\\r\n *   handleModalResult(graphId, result)\\r\n *\n * For detailed documentation of the above please contact support team\\r\n *\n * NOTE:\n *   Use ECMAScript 5\n *   The name of the main function must be \"onGraphUpdate\"\n *   The function should always return a promise which resolves\n *   with a modified graph model\n */\nfunction onGraphUpdate(graphId, kibiGraphModel) {\n  _.each(kibiGraphModel.nodes, function (node) {\n    if (node.entityId === 'search:Company') {\n      if (node.payload && node.payload.location) {\n        const latLong = node.payload.location.split(', ');\n        node.map = {\n          lat: latLong[0],\n          lng: latLong[1]\n        }\n      }\n    }\n  });\n\n  return kibiGraphModel;\n}\n",
      "version": 2,
      "type": "onGraphUpdate"
    }
  },
  {
    "_id": "script:Signal-Dead-Companies",
    "_type": "script",
    "_source": {
      "title": "Signal Dead Companies",
      "description": "Turns the dead companies black and adds an upper left glyph",
      "scriptSource": "/*\n * Signal Dead Companies\n *\n * f - refers to kibi helper with following functions available\n *   defaultExpansion(graphid, idList, relations)\n *   executeGremlinQuery(graphId, queryTemplate, idList)\n *   addResultsToGraph(graphId, queriedIds, results)\n *   executeEsSearch(index, type, body, size)\n *   getKibiRelations()\n *   openModal(graphId, title, innerHtml)\n *   handleModalResult(graphId, result)\n *\n * For detailed documentation of the above please contact support team\n *\n * NOTE:\n *   Use ECMAScript 5\n *   The name of the main function must be \"beforeAll\"\n *   The function should always return a promise which resolves\n *   with a modified graph model\n */\nfunction onGraphUpdate(graphId, kibiGraphModel) {\n  _.each(kibiGraphModel.nodes, function (node) {\n    if (node.type === 'Company') {\n      if (node.payload && node.payload.deadpooled_date && node.payload.deadpooled_date !== 'Invalid date') {\n        node.glyphs =  [{position: 'nw', fontIcon: { iconName: 'fa-times', color: '#000' }}];\n        node.color = '#000';\n      }\n    }\n  });\n\n  return kibiGraphModel;\n}\n",
      "version": 2,
      "type": "onGraphUpdate"
    }
  },
  {
    "_id": "script:Select-Invert",
    "_type": "script",
    "_source": {
      "title": "Select - Invert",
      "description": "Inverts the current selection.",
      "scriptSource": "/*\n * Select Invert\n *\n * f - refers to kibi helper with following functions available\n *   defaultExpansion(graphid, idList, relations)\n *   executeGremlinQuery(graphId, queryTemplate, idList)\n *   addResultsToGraph(graphId, queriedIds, results)\n *   executeEsSearch(index, type, body, size)\n *   getKibiRelations()\n *   openModal(graphId, title, innerHtml)\n *   handleModalResult(graphId, result)\n *\n * For detailed documentation of the above please contact support team\n *\n * NOTE:\n *   Use ECMAScript 5\n *   The name of the main function must be \"beforeAll\"\n *   The function should always return a promise which resolves\n *   with a modified graph model\n */\nfunction beforeAll(graphId, graphModel, graphSelection) {\n  let oldSelectionSet = new Set(graphSelection);\n  let newSelection = [];\n\n  _.each(graphModel.nodes, function (node) {\n    if (!oldSelectionSet.has(node.id)) {\n      newSelection.push(node.id);\n    }\n  });\n\n  return Promise.resolve({\n    model: null,\n    selection: newSelection\n  });\n}\n",
      "version": 2,
      "type": "contextual"
    }
  },
  {
    "_id": "script:Select-All",
    "_type": "script",
    "_source": {
      "title": "Select - All",
      "description": "Selects all the nodes.",
      "scriptSource": "/*\n * Select All\n *\n * f - refers to kibi helper with following functions available\n *   defaultExpansion(graphid, idList, relations)\n *   executeGremlinQuery(graphId, queryTemplate, idList)\n *   addResultsToGraph(graphId, queriedIds, results)\n *   executeEsSearch(index, type, body, size)\n *   getKibiRelations()\n *   openModal(graphId, title, innerHtml)\n *   handleModalResult(graphId, result)\n *\n * For detailed documentation of the above please contact support team\n *\n * NOTE:\n *   Use ECMAScript 5\n *   The name of the main function must be \"beforeAll\"\n *   The function should always return a promise which resolves\n *   with a modified graph model\n */\nfunction beforeAll (graphId, graphModel, graphSelection) {\n  const selection = _.map(graphModel.nodes, 'id');\n\n  return Promise.resolve({ selection: selection});\n}\n",
      "version": 2,
      "type": "contextual"
    }
  },
  {
    "_id": "script:Associate-records-based-on-ontology-lens-default-implementation",
    "_type": "script",
    "_source": {
      "title": "Associate records based on ontology lens - default implementation",
      "description": "Allows replacing a node with associated records based on ontology.",
      "scriptSource": "/*\n * Associate records based on ontology lens - default implementation\n *\n * f - refers to kibi helper with following functions available\n *   defaultExpansion(graphid, idList, relations)\n *   executeGremlinQuery(graphId, queryTemplate, idList)\n *   addResultsToGraph(graphId, queriedIds, results)\n *   executeEsSearch(index, type, body, size)\n *   getKibiRelations()\n *   openModal(graphId, title, innerHtml)\n *   handleModalResult(graphId, result)\n *   buildSelectEntityMenu(graphModel, precomputed, excludeTypes)\n *\n * Globals:\n *\n * - kibiTimezone: a string containing the value of the dateFormat:tz setting.\n * - moment: an instance of moment-timezone with the default timezone set to the value of the dateFormat:tz setting.\n * - jexl: instance of an Javascript Expression Language.\n * - mappedColors: an instance of a color mapping helper.\n * - fieldHelper: getFields - method to grab a list of fields for given indexPattern\n *                getFilterByEsType - method create an angular filter to filter out fields by esType\n *                flattenObj - method to flatten object properties usefull to flaten keys of nested es objects\n *\n * For detailed documentation of the above please contact support team\n *\n * NOTE:\n *   Use ECMAScript 5\n *   The name of the main function must be \"onGraphUpdate\"\n *   The function should always return a promise which resolves\n *   with a modified graph model\n *   The lens definition must be in a \"getLensDefinition\" function.\n *   The lens should always contain a \"setParams\" function, used during the lenses execution.\n */\n\nvar _parameters = {\n  leftEntity: '',\n  middleEntity: '',\n  rightEntity: '',\n  liveUpdate: false,\n  selection: [],\n  methods: {}\n};\n\nfunction getLensDefinition(graphId, graphModel, selection, precomputed) {\n  // Build the entity options once\n  let entities = [];\n\n  // Middle entity select\n  var html = '<label>Entity Type</label>';\n  html += f.buildSelectEntityMenu(graphModel, precomputed, entities, [], { entityId: 'params.middleEntity', entities: 'data.entities' });\n\n  // Left entity select\n  html += '<label>Left Entity Type</label>';\n  html += f.buildSelectEntityMenu(graphModel, precomputed, entities, [], { entityId: 'params.leftEntity', entities: 'data.entities' });\n\n  // Right entity select\n  html += '<label>Right Entity Type</label>';\n  html += f.buildSelectEntityMenu(graphModel, precomputed, entities, [], { entityId: 'params.rightEntity', entities: 'data.entities' });\n\n  return Promise.resolve({\n    displayName: 'Associate records based on ontology',\n    type: 'Process',\n    template: html,\n    params: _parameters,\n    data: {\n      currentSelection: selection,\n      entities: entities\n    }\n  });\n}\n\nfunction setParams(params) {\n  _parameters = params;\n}\n\nfunction onGraphUpdate(graphId, graphModel) {\n  var middleEntity = _parameters.middleEntity;\n  var leftEntity = _parameters.leftEntity;\n  var rightEntity = _parameters.rightEntity;\n\n  var newExpandedNodes = [];\n\n  var nodesMap = _.reduce(graphModel.nodes, function (map, node) {\n    map[node.id] = node;\n    return map;\n  }, {});\n\n  function getRelationsForQuery(relationsArray) {\n    var relationsToString = JSON.stringify(relationsArray);\n    var relForQuery = relationsToString.substring(1, relationsToString.length - 1);\n    return relForQuery.split('\"').join('\\'');\n  }\n\n  return f.getKibiRelations()\n  .then(function (relations) {\n    var selectedRelationIds = '';\n    if (relations && relations.length > 0) {\n      var filteredRelationIds = [];\n      for (var i = 0; i < relations.length; i++) {\n        filteredRelationIds.push(relations[i].id);\n      }\n      if (filteredRelationIds.length > 0) {\n        selectedRelationIds = getRelationsForQuery(filteredRelationIds);\n      }\n    }\n\n    var queryTemplate = 'g.V($1).bothE(';\n    queryTemplate += selectedRelationIds;\n    queryTemplate += ').as(\\'e\\').bothV().as(\\'v\\').select(\\'e\\',\\'v\\').mapValues().dedup()';\n\n    function processNode (node) {\n      if (node.entityId && node.entityId === middleEntity) {\n        var nodeState = {\n          label: node.label,\n          size: node.size,\n          color: node.color,\n          hidden: f.isHiddenNode(graphId, node.id),\n          time: node.time,\n          entityId: node.entityId,\n          tooltip: node.tooltip,\n          legendTooltip: node.legendTooltip\n        };\n        node.hidden = true;\n\n        return f.executeGremlinQueryAndParse(graphId, queryTemplate, [node.id])\n        .then(function (results) {\n          var leftNode = _.find(results, { 'entityId': leftEntity });\n          if (!leftNode) {\n            // not hide the middle entity if nothing is aggregatable\n            node.hidden = false;\n            return;\n          }\n          var rightNode = _.find(results, function (result) {\n            return result.entityId === rightEntity &&\n              result.id !== leftNode.id;\n          });\n          if (!rightNode) {\n            // not hide the middle entity if nothing is aggregatable\n            node.hidden = false;\n            return;\n          }\n\n          var linkPair = {\n            in: leftNode.id,\n            out: rightNode.id\n          };\n\n          var newRelation = createScriptedLink(linkPair, nodeState, node.id, 'in');\n\n          var graphModelRightNode = nodesMap[rightNode.id];\n          if (graphModelRightNode) {\n            copyProperties(graphModelRightNode, rightNode);\n          }\n          var graphModelLeftNode = nodesMap[leftNode.id];\n          if (graphModelLeftNode) {\n            copyProperties(graphModelLeftNode, leftNode);\n          }\n\n          rightNode.volatile = true;\n          leftNode.volatile = true;\n\n          newExpandedNodes.push(rightNode);\n          newExpandedNodes.push(leftNode);\n\n          graphModel.relations.push(newRelation);\n        });\n      } else {\n        return Promise.resolve();\n      }\n    }\n\n    // process 3 requests a time\n    return Promise.map(graphModel.nodes, processNode, { concurrency: 3 })\n    .then(function () {\n      graphModel.nodes = graphModel.nodes.concat(newExpandedNodes);\n      return graphModel;\n    });\n  });\n}\n\nfunction createScriptedLink(linkPair, nodeState, nodeId, direction) {\n  var newLink = {\n    id: hashCode(linkPair.in + linkPair.out + nodeId),\n    direction: direction,\n    in: linkPair.in,\n    out: linkPair.out,\n    volatile: true\n  };\n  _.each(nodeState, function (value, key) {\n    newLink[key] = value;\n  });\n  return newLink;\n}\n\nfunction copyProperties(srcNode, targetNode) {\n  _.each(srcNode, function (value, key) {\n    targetNode[key] = value;\n  });\n}\n\nfunction hashCode(s){\n  return 'ASSOCIATED_EDGE-'+ s.split('').reduce(function(a,b){a=((a<<5)-a)+b.charCodeAt(0);return a&a},0);\n}\n",
      "version": 2,
      "type": "lens"
    }
  },
  {
    "_id": "script:Graph-metric-lens.-default-implementation",
    "_type": "script",
    "_source": {
      "title": "Graph metric lens. - default implementation",
      "description": "Allows set color and sizes based on metrics",
      "scriptSource": "/*\n * Graph metric lens. - default implementation\n *\n * f - refers to kibi helper with following functions available\n *   defaultExpansion(graphid, idList, relations)\n *   executeGremlinQuery(graphId, queryTemplate, idList)\n *   addResultsToGraph(graphId, queriedIds, results)\n *   executeEsSearch(index, type, body, size)\n *   getKibiRelations()\n *   openModal(graphId, title, innerHtml)\n *   handleModalResult(graphId, result)\n *   buildSelectEntityMenu(graphModel, precomputed, excludeTypes)\n *\n * Globals:\n *\n * - kibiTimezone: a string containing the value of the dateFormat:tz setting.\n * - moment: an instance of moment-timezone with the default timezone set to the value of the dateFormat:tz setting.\n * - jexl: instance of an Javascript Expression Language.\n * - mappedColors: an instance of a color mapping helper.\n * - fieldHelper: getFields - method to grab a list of fields for given indexPattern\n *                getFilterByEsType - method create an angular filter to filter out fields by esType\n *                flattenObj - method to flatten object properties usefull to flaten keys of nested es objects\n *\n * For detailed documentation of the above please contact support team\n *\n * NOTE:\n *   Use ECMAScript 5\n *   The name of the main function must be \"onGraphUpdate\"\n *   The function should always return a promise which resolves\n *   with a modified graph model\n *   The lens definition must be in a \"getLensDefinition\" function.\n *   The lens should always contain a \"setParams\" function, used during the lenses execution.\n */\n\nvar _parameters = {\n  entityId: '__$$ALL$__',\n  metricName: '',\n  liveUpdate: true,\n  selection: [],\n  methods: {},\n  legendTooltip: false\n};\n\nfunction getLensDefinition(graphId, graphModel, selection, precomputed) {\n  var html = '<label>Entity Type</label>';\n  let entities = [];\n  html += f.buildSelectEntityMenu(graphModel, precomputed, entities);\n\n  html    += '<label>Size metric name</label>';\n  html    += '<select class=\"form-control\"';\n  html    += ' ng-model=\"params.metricName\"';\n  html    += ' >';\n  html    += ' <option value=\"betweenness\" >SIZE: Betweenness</option>';\n  html    += ' <option value=\"closeness\" >SIZE: Closeness</option>';\n  html    += ' <option value=\"eigenvector\" >SIZE: Eigenvector</option>';\n  html    += ' <option value=\"degree\" >SIZE: Degree</option>';\n  html    += ' <option value=\"pagerank\" >SIZE: Pagerank</option>';\n  html    += ' <option value=\"components\" >COLOR: Components</option>';\n  html    += ' <option value=\"cluster\" >COLOR: Cluster</option>';\n  html    += ' <option value=\"\" disabled selected hidden>Select a metric</option>';\n  html    += '</select>';\n\n  // Descriptions\n  // Degree description\n  html    += '<div class=\"lens-description\" ng-if=\"params.metricName === \\'degree\\'\">';\n  html    += 'The degrees function calculates the degrees (number of links) of all nodes in the graph.<br>';\n  html    += 'The degrees function does not count any self links (links that have the same node at both ends).';\n  html    += '</div>';\n\n  // Closeness description\n  html    += '<div class=\"lens-description\" ng-if=\"params.metricName === \\'closeness\\'\">';\n  html    += 'Calculates the closeness centrality of all nodes in the graph.';\n  html    += '</div>';\n\n  // Betweenness description\n  html    += '<div class=\"lens-description\" ng-if=\"params.metricName === \\'betweenness\\'\">';\n  html    += 'Calculates the betweenness centrality of all nodes in the graph.';\n  html    += '</div>';\n\n  // Cluster description\n  html    += '<div class=\"lens-description\" ng-if=\"params.metricName === \\'cluster\\'\">';\n  html    += 'Groups nodes in the graph into a set of clusters';\n  html    += '</div>';\n\n  // Components description\n  html    += '<div class=\"lens-description\" ng-if=\"params.metricName === \\'components\\'\">';\n  html    += 'Separates connected components of the graph.';\n  html    += '</div>';\n\n  // Pagerank description\n  html    += '<div class=\"lens-description\" ng-if=\"params.metricName === \\'pagerank\\'\">';\n  html    += 'Calculates the PageRank of each node.<br>';\n  html    += 'The PageRank measure identifies important nodes by assigning each node a score based';\n  html    += ' on its number of incoming links (its indegree).<br>';\n  html    += 'These links are weighted depending on the relative scores of their originating nodes.<br>';\n  html    += 'All values must be positive numbers. If there are multiple links between two nodes,';\n  html    += ' the sum of the values of each link will be used.';\n  html    += '</div>';\n\n  // Eigenvector description\n  html    += '<div class=\"lens-description\" ng-if=\"params.metricName === \\'eigenvector\\'\">';\n  html    += 'Computes the eigenvector centrality of each node.<br>';\n  html    += 'Eigenvector centrality is a measure of influence that takes into account the number';\n  html    += ' of links each node has and the number of links their connections have, and so on throughout the network.<br>';\n  html    += 'All values must be positive numbers. If there are multiple links between two nodes,';\n  html    += ' the sum of the values of each link will be used.<br>';\n  html    += 'If you do not specify a value property, the values of all links are set to 1.<br>';\n  html    += 'The results are normalised so that the nodes in each connected component have a total';\n  html    += ' eigenvector centrality value of 1. For example, an isolated node will always have an eigenvector centrality of 1.<br>';\n  html    += 'Link direction does not affect the eigenvector centrality calculation.';\n  html    += '</div>';\n\n\n  html    += '</div>';\n  return Promise.resolve({\n    displayName: 'Graph metric',\n    type: 'Advanced',\n    template: html,\n    params: _parameters,\n    data: {\n      entities: entities\n    }\n  });\n}\n\nfunction setParams(params) {\n  _parameters = params;\n}\n\nfunction onGraphUpdate(graphId, graphModel) {\n  var entityId = _parameters.entityId;\n  var metricName = _parameters.metricName;\n  if (metricName) {\n    return f.applyMetric(graphId, metricName)\n    .then(function (metricNodes) {\n      _.each(graphModel.nodes, function (node) {\n        if (entityId === '__$$ALL$__' || node.entityId === entityId) {\n          var metricNode = metricNodes[node.id];\n          if (!metricNode) {\n            return;\n          }\n          if (metricName === 'cluster' || metricName === 'components') { //COLOR METRIC\n            node.color = metricNode;\n          } else { //SIZE METRIC\n            node.size = metricNode;\n          }\n        }\n      });\n      return graphModel;\n    });\n  }\n  return Promise.resolve(graphModel);\n}\n",
      "version": 2,
      "type": "lens"
    }
  },
  {
    "_id": "script:Time-and-location-lens.-default-implementation",
    "_type": "script",
    "_source": {
      "title": "Time and location lens. - default implementation",
      "description": "Allows set time and/or location properties.",
      "scriptSource": "/*\n * Time and location lens. - default implementation\n *\n * f - refers to kibi helper with following functions available\n *   defaultExpansion(graphid, idList, relations)\n *   executeGremlinQuery(graphId, queryTemplate, idList)\n *   addResultsToGraph(graphId, queriedIds, results)\n *   executeEsSearch(index, type, body, size)\n *   getKibiRelations()\n *   openModal(graphId, title, innerHtml)\n *   handleModalResult(graphId, result)\n *   buildSelectEntityMenu(graphModel, precomputed, excludeTypes)\n *\n * Globals:\n *\n * - kibiTimezone: a string containing the value of the dateFormat:tz setting.\n * - moment: an instance of moment-timezone with the default timezone set to the value of the dateFormat:tz setting.\n * - jexl: instance of an Javascript Expression Language.\n * - mappedColors: an instance of a color mapping helper.\n * - fieldHelper: getFields - method to grab a list of fields for given indexPattern\n *                getFilterByEsType - method create an angular filter to filter out fields by esType\n *                flattenObj - method to flatten object properties usefull to flaten keys of nested es objects\n *\n * For detailed documentation of the above please contact support team\n *\n * NOTE:\n *   Use ECMAScript 5\n *   The name of the main function must be \"onGraphUpdate\"\n *   The function should always return a promise which resolves\n *   with a modified graph model\n *   The lens definition must be in a \"getLensDefinition\" function.\n *   The lens should always contain a \"setParams\" function, used during the lenses execution.\n */\n\nvar _parameters = {\n  entityId: '__$$ALL$__',\n  latitudeField: '',\n  longitudeField: '',\n  geoPointField: '',\n  geoPointType: '',\n  timeField: '',\n  opSpatial: false,\n  opTime: false,\n  selection: [],\n  methods: {}\n};\n\nfunction getLensDefinition(graphId, graphModel, selection, precomputed) {\n  var html = '<label>Entity Type</label>';\n  let entities = [];\n  html += f.buildSelectEntityMenu(graphModel, precomputed, entities, ['VIRTUAL_ENTITY']);\n  let allPromises = [];\n  if (graphModel && graphModel.nodes && graphModel.nodes.length > 0) {\n    precomputed.entityIdSet.forEach(function (entityId) {\n      var entity = precomputed.entityMap[entityId];\n      if (entity.type !== 'VIRTUAL_ENTITY') {\n        html += '<option value=\"' + entity.id + '\">' + entity.label + '</option>';\n      };\n      allPromises.push(fieldHelper.prepareFields(entity));\n    });\n  }\n\n  const searchesWithGeoFields = [];\n  let countNumericGeoField = 0;\n  _parameters.methods = {\n    // allow float types to support use cases where latitude and longitude are on separate fields.\n    filterGeoFields: fieldHelper.getFilterByEsType(['geo_point', 'geo_shape']),\n    filterNumericGeoFields: fieldHelper.getFilterByEsType(['double', 'float']),\n    filterGeoPointLatLonObject: (fieldObj) => {\n      const parts = fieldObj.displayFieldName.split('.');\n      return (countNumericGeoField > 1 && _parameters.methods.filterNumericGeoFields(fieldObj))\n              || (parts.length > 1 && _parameters.methods.filterGeoFields(fieldObj)\n              && (parts[parts.length - 1] === 'lat' || parts[parts.length - 1] === 'lon'));\n    },\n    filterGeoPoint: (fieldObj) => {\n      return _parameters.methods.filterGeoFields(fieldObj)\n              && !_parameters.methods.filterGeoPointLatLonObject(fieldObj);\n    },\n    filterTimeFields: fieldHelper.getFilterByEsType(['date']),\n    filterTimeAndNullFiled: (fieldObj) => {\n      return (_parameters.methods.filterTimeFields(fieldObj) || fieldObj.fieldName === 'no-field');\n    },\n    filterGeoPointLatLonObjectToShow: (fieldObj) => {\n      if (searchesWithGeoFields.indexOf(fieldObj.entityId) === -1) {\n        return false;\n      } else {\n        return _parameters.methods.filterGeoPointLatLonObject(fieldObj);\n      };\n    }\n  };\n\n  return Promise.all(allPromises).then(() => {\n    const searchesWithNumericGeoFields = {};\n    let countGeoPointLatLon = 0;\n    let countGeoPoint = 0;\n    let validSearchesWithNumericGeoFields = false;\n\n    var uniqueFieldNodes = {};\n    if (graphModel && graphModel.nodes && graphModel.nodes.length > 0) {\n      //payload in graphModel.nodes not contains all field (null value fields not included)\n      //Add payload field with null values\n      var nodes = _.unique(graphModel.nodes, 'entityId');\n      _.each(graphModel.nodes, function (node) {\n        const entityNode = _.find(nodes, {'entityId': node.entityId});\n        entityNode.payload = _.merge(entityNode.payload, node.payload);\n      });\n\n      uniqueFieldNodes['__$$ALL$__'] = [{\n        entityId: '__$$ALL$__',\n        fieldName: 'no-field',\n        displayFieldName: '<no field>'\n      }];\n      _.each(nodes, function (node) {\n        uniqueFieldNodes[node.entityId] = [{\n          entityId: node.entityId,\n          fieldName: 'no-field',\n          displayFieldName: '<no field>'\n        }];\n        var entity = precomputed.entityMap[node.entityId];\n        var flattenedPayload = fieldHelper.flattenObj(node.payload);\n\n        for (var field in flattenedPayload) {\n          if (flattenedPayload.hasOwnProperty(field)) {\n            var fieldObj = {\n              entityId: node.entityId,\n              fieldName: node.entityId + '.' + field,\n              displayFieldName: field\n            };\n            uniqueFieldNodes[node.entityId].push(fieldObj);\n            if(!_.some(uniqueFieldNodes['__$$ALL$__'], {displayFieldName: fieldObj.displayFieldName})) {\n              uniqueFieldNodes['__$$ALL$__'].push(fieldObj);\n            }\n            if (_parameters.methods.filterGeoPointLatLonObject(fieldObj)) {\n              if (searchesWithNumericGeoFields[fieldObj.entityId]) {\n                searchesWithNumericGeoFields[fieldObj.entityId].push(fieldObj.displayFieldName);\n              } else {\n                searchesWithNumericGeoFields[fieldObj.entityId] = [fieldObj.displayFieldName];\n              };\n              countGeoPointLatLon++;\n            } else if (_parameters.methods.filterNumericGeoFields(fieldObj)) {\n              if (searchesWithNumericGeoFields[fieldObj.entityId]) {\n                searchesWithNumericGeoFields[fieldObj.entityId].push(fieldObj.displayFieldName);\n              } else {\n                searchesWithNumericGeoFields[fieldObj.entityId] = [fieldObj.displayFieldName];\n              };\n              countNumericGeoField++;\n            } else if (_parameters.methods.filterGeoPoint(fieldObj)) {\n              if (searchesWithGeoFields.indexOf(fieldObj.entityId) === -1) {\n                searchesWithGeoFields.push(fieldObj.entityId);\n              };\n              countGeoPoint++;\n            }\n          }\n        }\n      });\n    }\n    _.each(searchesWithNumericGeoFields, (value, id) => {\n      if (searchesWithNumericGeoFields[id].length >= 2) {\n        if (searchesWithGeoFields.indexOf(id) === -1) {\n          searchesWithGeoFields.push(id);\n        };\n        if (!validSearchesWithNumericGeoFields) {\n          validSearchesWithNumericGeoFields = true;\n        };\n      };\n    });\n    if (countGeoPointLatLon > 0 || countGeoPoint > 0 || validSearchesWithNumericGeoFields) {\n      searchesWithGeoFields.push('__$$ALL$__');\n    }\n    html    += '<label><input type=\"checkbox\" ng-disabled=\"[\\'';\n    html    += searchesWithGeoFields.join('\\',\\'');\n    html    += '\\'].indexOf(params.entityId) === -1\" value=\"spatial\" ng-model=\"params.opSpatial\">Geographic</label>';\n\n    html    += '<fieldset ng-show=\"params.opSpatial\">';\n\n    if (countGeoPoint > 0 && (countGeoPointLatLon > 0 || validSearchesWithNumericGeoFields)) {\n      html    += '<label>Geo point type</label>';\n\n      html    += '<select class=\"form-control\"';\n      html    += ' ng-model=\"params.geoPointType\"';\n      html    += ' ng-class=\"{ \\'required-field\\': params.opSpatial && !params.geoPointType }\">';\n      html    += ' <option value=\"latlon\">Latitude/Longitude</option>';\n      html    += ' <option value=\"single\">Geo point</option>';\n      html    += ' <option value=\"\" ng-selected=true disabled hidden>Select a type</option>';\n      html    += '</select>';\n    }\n\n    let geoPointFieldRequired = false;\n    if (countGeoPoint > 0 && (countGeoPointLatLon > 0 || validSearchesWithNumericGeoFields)) {\n      html    += '<fieldset ng-show=\"params.geoPointType === \\'single\\' && params.opSpatial\">';\n      geoPointFieldRequired = 'params.geoPointType === \\'single\\'';\n    } else if (countGeoPoint === 0) {\n      html    += '<fieldset ng-show=false>';\n    } else {\n      html    += '<fieldset>';\n      geoPointFieldRequired = true;\n    }\n    html    += '<label>Location field</label>';\n\n    html    += '<select class=\"form-control\"';\n    html    += ' ng-model=\"params.geoPointField\"';\n    html    += ' ng-class=\"{ \\'required-field\\': params.opSpatial && !params.geoPointField && ' + geoPointFieldRequired + ' }\"';\n    html    += ' ng-options=';\n    html    += '  \"node.fieldName as node.displayFieldName for node in ';\n    html    += '  data.uniqueFieldNodes[params.entityId] | filter:params.methods.filterGeoPoint\">';\n    html    += ' <option value=\"\" disabled ng-selected=true hidden>Select a field</option>';\n    html    += '</select>';\n    html    += '</fieldset>'; // Single geopoint field\n\n    let latLngRequired = false;\n    if (countGeoPoint > 0 && (countGeoPointLatLon > 0 || validSearchesWithNumericGeoFields)) {\n      html    += '<fieldset ng-show=\"params.geoPointType === \\'latlon\\' && params.opSpatial\">';\n      latLngRequired = 'params.geoPointType === \\'latlon\\'';\n    } else if (countGeoPointLatLon === 0 && !validSearchesWithNumericGeoFields) {\n      html    += '<fieldset ng-show=false>';\n    } else {\n      html    += '<fieldset>';\n      latLngRequired = true;\n    }\n    html    += '<label>Latitude</label>';\n\n    html    += '<select class=\"form-control\"';\n    html    += ' ng-model=\"params.latitudeField\"';\n    html    += ' ng-class=\"{ \\'required-field\\': params.opSpatial && !params.latitudeField && ' + latLngRequired + ' }\"';\n    html    += ' ng-options=';\n    html    += '  \"node.fieldName as node.displayFieldName for node in';\n    html    += '   data.uniqueFieldNodes[params.entityId] | filter:params.methods.filterGeoPointLatLonObjectToShow\">';\n    html    += ' <option value=\"\" disabled ng-selected=true hidden>Select a field</option>';\n    html    += '</select>';\n\n    html    += '<label>Longitude</label>';\n\n    html    += '<select class=\"form-control\"';\n    html    += ' ng-model=\"params.longitudeField\"';\n    html    += ' ng-class=\"{ \\'required-field\\': params.opSpatial && !params.longitudeField  && ' + latLngRequired + ' }\"';\n    html    += ' ng-options=';\n    html    += '  \"node.fieldName as node.displayFieldName for node in';\n    html    += '   data.uniqueFieldNodes[params.entityId] | filter:params.methods.filterGeoPointLatLonObjectToShow\">';\n    html    += ' <option value=\"\" disabled ng-selected=true hidden>Select a field</option>';\n    html    += '</select>';\n    html    += '</fieldset>'; //LatLon fields\n\n    html    += '</fieldset>';\n    html    += '<br ng-show=\"!params.opSpatial\">';\n\n    html    += '<label><input type=\"checkbox\" ng-model=\"params.opTime\">Time</label>';\n\n    html    += '<fieldset ng-disabled=\"!params.opTime\">';\n    html    += '<label>Time field</label>';\n\n    html    += '<select class=\"form-control\"';\n    html    += ' ng-model=\"params.timeField\"';\n    html    += ' ng-class=\"{ \\'required-field\\': params.opTime && !params.timeField }\"';\n    html    += ' ng-options=';\n    html    += '  \"node.fieldName as node.displayFieldName for node in';\n    html    += '   data.uniqueFieldNodes[params.entityId] | filter:params.methods.filterTimeAndNullFiled\">';\n    html    += ' <option value=\"\" disabled selected hidden>Select a field</option>';\n    html    += '</select>';\n\n    html    += '</fieldset>';\n\n    return {\n      displayName: 'Time/Location set lens',\n      type: 'Spatio-Temporal',\n      template: html,\n      params: _parameters,\n      data: {\n        uniqueFieldNodes: uniqueFieldNodes,\n        entities: entities\n      }\n    };\n  });\n}\n\nfunction setParams(params) {\n  _parameters = params;\n}\n\nfunction onGraphUpdate(graphId, graphModel) {\n  var docType = _parameters.entityId;\n  var geoPointType = _parameters.geoPointType;\n  var geoPointField = _parameters.geoPointField ? _parameters.geoPointField.substring(_parameters.geoPointField.indexOf('.') + 1) : null;\n  var latitudeField = _parameters.latitudeField ? _parameters.latitudeField.substring(_parameters.latitudeField.indexOf('.') + 1) : null;\n  var longitudeField = _parameters.longitudeField\n                      ? _parameters.longitudeField.substring(_parameters.longitudeField.indexOf('.') + 1) : null;\n  var timeField = _parameters.timeField.substring(_parameters.timeField.indexOf('.') + 1);\n  var opSpatial = _parameters.opSpatial;\n  var opTime = _parameters.opTime;\n  function parseDate(date, timezone) {\n    return moment.tz(date, 'YYYY-MM-DD HH:mm:SS', timezone);\n  }\n\n  _.each(graphModel.nodes, function (node) {\n    if (docType === '__$$ALL$__' || node.entityId === docType) {\n      if (opSpatial && latitudeField && longitudeField) {\n        if (_.has(node.payload, latitudeField) && _.has(node.payload, longitudeField)) {\n          node.map = {\n            lat: +_.get(node.payload, latitudeField),\n            lng: +_.get(node.payload, longitudeField)\n          };\n        }\n      }\n      if (opSpatial && geoPointField) {\n        if (_.has(node.payload, geoPointField)) {\n          const geovalue = _.get(node.payload, geoPointField);\n          const latLng = dataModelHelper.getLatLngFromGeoValue(geovalue);\n          node.map = {\n            lat: +latLng.lat,\n            lng: +latLng.lng\n          };\n        }\n      }\n      if (opTime && timeField) {\n        if (timeField === 'no-field') {\n          node.time = 0;\n        }\n        else {\n          var value =  _.get(node.payload, timeField);\n          var momentTime = parseDate(value, 'UTC');\n          if (momentTime) {\n            node.time = momentTime.valueOf() - moment.tz.zone(kibiTimezone).utcOffset(momentTime.valueOf()) * 60000;\n          }\n        }\n      }\n    }\n  });\n\n  return Promise.resolve(graphModel);\n}\n",
      "version": 2,
      "type": "lens"
    }
  },
  {
    "_id": "script:Color-lens.-default-implementation",
    "_type": "script",
    "_source": {
      "title": "Color lens. - default implementation",
      "description": "Allows define color for all nodes using a field",
      "scriptSource": "/*\n * Color lens. - default implementation\n *\n * f - refers to kibi helper with following functions available\n *   defaultExpansion(graphid, idList, relations)\n *   executeGremlinQuery(graphId, queryTemplate, idList)\n *   addResultsToGraph(graphId, queriedIds, results)\n *   executeEsSearch(index, type, body, size)\n *   getKibiRelations()\n *   openModal(graphId, title, innerHtml)\n *   handleModalResult(graphId, result)\n *   buildSelectEntityMenu(graphModel, precomputed, excludeTypes)\n *\n * Globals:\n *\n * - kibiTimezone: a string containing the value of the dateFormat:tz setting.\n * - moment: an instance of moment-timezone with the default timezone set to the value of the dateFormat:tz setting.\n * - jexl: instance of an Javascript Expression Language.\n * - mappedColors: an instance of a color mapping helper.\n * - fieldHelper: getFields - method to grab a list of fields for given indexPattern\n *                getFilterByEsType - method create an angular filter to filter out fields by esType\n *                flattenObj - method to flatten object properties usefull to flaten keys of nested es objects\n *\n * For detailed documentation of the above please contact support team\n *\n * NOTE:\n *   Use ECMAScript 5\n *   The name of the main function must be \"onGraphUpdate\"\n *   The function should always return a promise which resolves\n *   with a modified graph model\n *   The lens definition must be in a \"getLensDefinition\" function.\n *   The lens should always contain a \"setParams\" function, used during the lenses execution.\n */\n\nvar _parameters = {\n  entityType: '__$$ALL$__',\n  fieldName: '',\n  liveUpdate: true,\n  selection: [],\n  methods: {},\n  legendTooltip: false\n};\n\nfunction getLensDefinition(graphId, graphModel, selection, precomputed) {\n  var html = '<label>Entity Type</label>';\n  let entities = [];\n  html += f.buildSelectEntityMenu(graphModel, precomputed, entities, [], { entityId: 'params.entityType', entities: 'data.entities' });\n\n  var uniqueFieldNodes = { '__$$ALL$__': []};\n  if (graphModel && graphModel.nodes && graphModel.nodes.length > 0) {\n    var nodes = _.unique(graphModel.nodes, 'entityId');\n\n    _.each(nodes, function (node) {\n      var flattenedPayload = fieldHelper.flattenObj(node.payload);\n\n      for (var field in flattenedPayload) {\n        if (flattenedPayload.hasOwnProperty(field)) {\n          if (!uniqueFieldNodes[node.entityId]) {\n            uniqueFieldNodes[node.entityId] = [];\n          }\n          var fieldConfig = {\n            fieldName: node.entityId + '.' + field,\n            displayFieldName: field\n          };\n          uniqueFieldNodes[node.entityId].push(fieldConfig);\n          uniqueFieldNodes['__$$ALL$__'].push(fieldConfig);\n        }\n      }\n    });\n  }\n\n  html    += '<div ng-if=\"data.uniqueFieldNodes[params.entityType] && data.uniqueFieldNodes[params.entityType].length\"';\n  html    += '  <label>Field</label>';\n  html    += '  <select class=\"form-control\"';\n  html    += '   ng-model=\"params.fieldName\"';\n  html    += '   ng-class=\"{ \\'required-field\\': !params.fieldName }\"';\n  html    += '   ng-options=\"elmt.fieldName as elmt.displayFieldName for elmt in data.uniqueFieldNodes[params.entityType]\">';\n  html    += '   <option value=\"\" disabled selected hidden>Select a field</option>';\n  html    += '  </select>';\n  html    += '</div>';\n\n  html    += '<label><input type=\"checkbox\" class=\"kuiCheckBox\" ng-model=\"params.legendTooltip\"> Legend tooltip</label>';\n\n  return Promise.resolve({\n    displayName: 'Color from field',\n    type: 'Color',\n    template: html,\n    params: _parameters,\n    data: {\n      uniqueFieldNodes: uniqueFieldNodes,\n      entities: entities\n    }\n  });\n}\n\nfunction setParams(params) {\n  _parameters = params;\n}\n\nfunction onGraphUpdate(graphId, graphModel) {\n  var entityType = _parameters.entityType;\n  var fieldName = _parameters.fieldName ? _parameters.fieldName.substring(_parameters.fieldName.indexOf('.') + 1) : '';\n  var lensDisplayName = lens && lens.state && lens.state.displayName ? lens.state.displayName : 'Color from field';\n  var legendTooltip = _parameters.legendTooltip;\n\n  var colorSet = _.unique(_.map(graphModel.nodes, function (node) {\n    if (entityType === '__$$ALL$__' || node.entityId === entityType) {\n      if (fieldName) {\n        return _.get(node.payload, fieldName);\n      } else {\n        // for EIDs\n        return node.label;\n      }\n    }\n  }));\n  mappedColors.mapKeys(colorSet);\n\n  _.each(graphModel.nodes, function (node) {\n    if (entityType === '__$$ALL$__' || node.entityId === entityType) {\n      if (fieldName) {\n        // this way we won't changed EIDs color\n        var fieldValue = _.get(node.payload, fieldName);\n        if (fieldValue) {\n          node.color = mappedColors.get(fieldValue);\n        }\n      } else {\n        node.color = mappedColors.get(node.label);\n      }\n      if (legendTooltip) {\n        node.legendTooltip.push({\n          title: lensDisplayName,\n          reference: fieldName,\n          value: _.get(node.payload, fieldName)\n        });\n      }\n    }\n  });\n\n  return Promise.resolve(graphModel);\n}\n",
      "version": 2,
      "type": "lens"
    }
  },
  {
    "_id": "script:Expand-by-relation",
    "_type": "script",
    "_source": {
      "title": "Expand by relation",
      "description": "Expands the selected nodes using the selected relations",
      "scriptSource": "/*\n * Expand by relation\n *\n *\n * f - refers to kibi helper with following functions available\n *   defaultExpansion(graphid, idList, relations)\n *   executeGremlinQuery(graphId, queryTemplate, idList)\n *   addResultsToGraph(graphId, queriedIds, results)\n *   executeEsSearch(index, type, body, size)\n *   getKibiRelations()\n *   openModal(graphId, title, innerHtml)\n *   handleModalResult(graphId, result)\n *\n * Globals:\n *\n * - kibiTimezone: a string containing the value of the dateFormat:tz setting.\n * - moment: an instance of moment-timezone with the default timezone set to the value of the dateFormat:tz setting.\n *\n * For detailed documentation of the above please contact support team\n *\n * NOTE:\n *   Use ECMAScript 5\n *   The name of the main function must be \"beforeAll\"\n *   The function should always return a promise which resolves\n *   with a modified graph model\n */\n\n\nfunction getCount(graphId, newGraphSelection, relation) {\n  var queryTemplate = 'g.V($1).bothE(\"' + relation.id  + '\").count()';\n  return f.executeGremlinQuery(graphId, queryTemplate, newGraphSelection)\n  .then(function (responses) {\n    var count = responses.reduce(function (acc, val) { return acc + val; }, 0);\n    return {\n      id: relation.id,\n      label: relation.directLabel,\n      count: count,\n      rangeLabel: relation.range.label\n    };\n  })\n  .catch(f.notify.error);\n}\n\nfunction beforeAll(graphId, graphModel, graphSelection) {\n  return f.getInvestigateEntities()\n  .then(function (entities) {\n    var newGraphSelection = getNodesSelection(graphSelection, graphModel);\n\n    var entityIdSet = _.reduce(graphModel.nodes, function (total, node) {\n      total.add(node.entityId);\n      return total;\n    }, new Set());\n\n    return f.getKibiRelations()\n    .then(function (relations) {\n      var arrayOfPromises = [];\n      // Filter relations\n      // this set is to avoid showing bidirectional relations, as they would have the same count\n      var bidirectionalRelation = new Set();\n      _.each(relations, function (relation) {\n        if (entityIdSet.has(relation.domain.id)) {\n          if (relation.directLabel === relation.inverseLabel\n            && !bidirectionalRelation.has(relation.directLabel)) {\n            arrayOfPromises.push(getCount(graphId, newGraphSelection,  relation));\n            bidirectionalRelation.add(relation.directLabel);\n          } else if (relation.directLabel !== relation.inverseLabel) {\n            arrayOfPromises.push(getCount(graphId, newGraphSelection,  relation));\n          }\n        }\n      });\n\n      return Promise.all(arrayOfPromises)\n      .then(function (arrayOfResults) {\n        arrayOfResults = _.sortBy(arrayOfResults, 'label');\n        var html = '<div>';\n        arrayOfResults.forEach(function (element) {\n          // The warning type is for errors. eg: access-control\n          if ((!element.type || element.type !== 'warning') && element.count > 0) {\n            html = html + '<input type=\"checkbox\" ng-model=\\'relations[\"' + element.id + '\"]\\'> '\n              + element.label + ' (' + element.count + ')'\n              + '<span style=\\'font-size:0.8em;font-style: italic\\'>' + element.rangeLabel + '</span>'\n              + '</input></br>';\n          }\n        });\n\n        html = html + '</div>';\n        f.openModal(graphId ,'Select the relation you want to expand', html);\n\n        return {\n          model: null,\n          selection: null\n        };\n      });//end Promise.all\n    });\n  });\n}\n\nfunction getNodesSelection(graphSelection, graphModel) {\n  var selection = [];\n  if (!graphSelection || graphSelection.length === 0) {\n    _.each(graphModel.nodes, function (node) {\n      selection.push(node.id);\n    });\n  } else {\n    var selectionSet = new Set(graphSelection);\n    _.each(graphModel.nodes, function (node) {\n      if (selectionSet.has(node.id)) {\n        selection.push(node.id);\n      }\n    });\n  }\n\n  return selection;\n}\n\nfunction onModalOk(scope, graphModel) {\n  var selectedRel = [];\n  for (var rel in scope.relations) {\n    if (scope.relations.hasOwnProperty(rel)) {\n      if (scope.relations[rel]) {\n        selectedRel.push(rel);\n      }\n    }\n  }\n\n  return selectedRel;\n}\n\nfunction afterModalClosed(graphId, graphModel, graphSelection, onOkModalResult) {\n  var selection = getNodesSelection(graphSelection, graphModel);\n  var queryTemplate;\n  if (onOkModalResult && onOkModalResult.length) {\n    var rels = JSON.stringify(onOkModalResult);\n    var relList = rels.substring(1, rels.length - 1);\n    queryTemplate = 'g.V($1).bothE(' + relList + ').as(\"e\").bothV().as(\"v\").select(\"e\",\"v\").mapValues()';\n  } else {\n    queryTemplate = 'g.V($1)';\n  }\n  var relationsSet = new Set(onOkModalResult);\n  return f.executeGremlinQuery(graphId, queryTemplate, selection)\n  .then(function (results) {\n    return f.addResultsToGraph(graphId, selection, results);\n  });\n}\n",
      "version": 2,
      "type": "contextual"
    }
  },
  {
    "_id": "script:Label-lens.-default-implementation",
    "_type": "script",
    "_source": {
      "title": "Label lens. - default implementation",
      "description": "Allows set the label for all nodes using an expression.",
      "scriptSource": "/*\n * Label lens. - default implementation\n *\n * f - refers to kibi helper with following functions available\n *   defaultExpansion(graphid, idList, relations)\n *   executeGremlinQuery(graphId, queryTemplate, idList)\n *   addResultsToGraph(graphId, queriedIds, results)\n *   executeEsSearch(index, type, body, size)\n *   getKibiRelations()\n *   openModal(graphId, title, innerHtml)\n *   handleModalResult(graphId, result)\n *   buildSelectEntityMenu(graphModel, precomputed, excludeTypes)\n *\n * Globals:\n *\n * - kibiTimezone: a string containing the value of the dateFormat:tz setting.\n * - moment: an instance of moment-timezone with the default timezone set to the value of the dateFormat:tz setting.\n * - jexl: instance of an Javascript Expression Language.\n * - mappedColors: an instance of a color mapping helper.\n * - fieldHelper: getFields - method to grab a list of fields for given indexPattern\n *                getFilterByEsType - method create an angular filter to filter out fields by esType\n *                flattenObj - method to flatten object properties usefull to flaten keys of nested es objects\n *\n * For detailed documentation of the above please contact support team\n *\n * NOTE:\n *   Use ECMAScript 5\n *   The name of the main function must be \"onGraphUpdate\"\n *   The function should always return a promise which resolves\n *   with a modified graph model\n *   The lens definition must be in a \"getLensDefinition\" function.\n *   The lens should always contain a \"setParams\" function, used during the lenses execution.\n */\n\nvar _parameters = {\n  entityId: '__$$ALL$__',\n  entityIdSet: new Set(),\n  expression: '',\n  liveUpdate: true,\n  selection: [],\n  methods: {}\n};\n\nfunction getLensDefinition(graphId, graphModel, selection, precomputed) {\n  var html = '<label>Entity Type</label>';\n  let entities = [];\n  html += f.buildSelectEntityMenu(graphModel, precomputed, entities);\n\n  html    += '<expression-editor label=\"\\'Expression\\'\" required-field=\"true\" error-message=\"data.errorMessages.expression\"';\n  html    += ' entity-id=\"params.entityId\" entity-id-set=\"data.entityIdSet\" expression=\"params.expression\"></expression-editor>';\n\n  return Promise.resolve({\n    displayName: 'Label from expression',\n    type: 'Label',\n    template: html,\n    params: _parameters,\n    data: {\n      entityIdSet: precomputed.entityIdSet,\n      entities: entities\n    }\n  });\n}\n\nfunction setParams(params) {\n  _parameters = params;\n}\n\nfunction checkParams(params, graphModel) {\n  var entityId = params.entityId;\n  var expression = params.expression.replace(/\\n\\r?/g, ' ');\n  var proms = [];\n  if (!_.isEmpty(expression)) {\n    // force jexl to generate a string response\n    expression = '\\'\\'+' + expression;\n    const node = graphModel.nodes[0];\n    if ( node && (entityId === '__$$ALL$__' || node.entityId === entityId)) {\n      proms.push(jexl.eval(expression, node).then(function (res) {\n      }).catch(function (reason) {\n        graphModel.errorMessages[lens.id] = {\n          model: 'expression',\n          reason: reason\n        };\n        return Promise.resolve();\n      }));\n    }\n  }\n  return Promise.all(proms)\n  .then(function () {\n    return graphModel;\n  });\n}\n\nfunction onGraphUpdate(graphId, graphModel) {\n  var entityId = _parameters.entityId;\n  var expression = _parameters.expression.replace(/\\n\\r?/g, ' ');\n  var proms = [];\n  if (!_.isEmpty(expression)) {\n    // force jexl to generate a string response\n    expression = '\\'\\'+' + expression;\n    _.each(graphModel.nodes, function (node) {\n      if (entityId === '__$$ALL$__' || node.entityId === entityId) {\n        proms.push(jexl.eval(expression, node).then(function (res) {\n          node.label = res.replace(/\\\\n/, '\\n');\n        }).catch(function (reason) {\n          graphModel.errorMessages[lens.id] = {\n            model: 'expression',\n            reason: reason\n          };\n          return Promise.resolve();\n        }));\n      }\n    });\n  }\n\n  return Promise.all(proms)\n  .then(function () {\n    return graphModel;\n  });\n}\n",
      "version": 2,
      "type": "lens"
    }
  },
  {
    "_id": "script:Select-By-Edge-Count",
    "_type": "script",
    "_source": {
      "title": "Select - By Edge Count",
      "description": "Select nodes by their number of relations",
      "scriptSource": "/*\n * Select by edge count\n *\n *\n * f - refers to kibi helper with following functions available\n *   defaultExpansion(graphid, idList, relations)\n *   executeGremlinQuery(graphId, queryTemplate, idList)\n *   addResultsToGraph(graphId, queriedIds, results)\n *   executeEsSearch(index, type, body, size)\n *   getKibiRelations()\n *   openModal(graphId, title, innerHtml)\n *   handleModalResult(graphId, result)\n *\n * For detailed documentation of the above please contact support team\n *\n * NOTE:\n *   Use ECMAScript 5\n *   The name of the main function must be \\\"beforeAll\\\"\n *   The function should always return a promise which resolves\n *   with a modified graph model\n */\nfunction beforeAll(graphId, graphModel, graphSelection) {\n  var html = '<input type=\"checkbox\" ng-model=\"visible\"> Consider only visible edges </input></br>'\n    + 'Minimum edges count: <input type=\"number\" ng-model=\"number\" maxlength=\"5\" size=\"5\"/>';\n  f.openModal(graphId, 'Insert the edges number', html);\n\n  return Promise.resolve({\n    model: null,\n    selection: null\n  });\n}\n\nfunction onModalShow(scope, graphModel) {\n  scope.number = 2; // default value\n  scope.visible = true; // default value\n}\n\nfunction onModalOk(scope, graphModel) {\n  return {\n    onlyVisibleEdges: scope.visible,\n    relationsNumber: scope.number\n  };\n}\n\nfunction afterModalClosed(graphId, graphModel, graphSelection, onOkModalResult) {\n  var selection = [];\n\n  if(onOkModalResult.onlyVisibleEdges) {\n    var nodesMap = {};\n    _.each(graphModel.relations, function (relation) {\n      if (nodesMap[relation.in]) {\n        nodesMap[relation.in] = nodesMap[relation.in] + 1;\n      } else {\n        nodesMap[relation.in] = 1;\n      }\n\n      if (nodesMap[relation.out]) {\n        nodesMap[relation.out] = nodesMap[relation.out] + 1;\n      } else {\n        nodesMap[relation.out] = 1;\n      }\n    });\n\n    for (var p in nodesMap) {\n      if (nodesMap.hasOwnProperty(p)) {\n        if (nodesMap[p] >= parseInt(onOkModalResult.relationsNumber, 10)) {\n          selection.push(p);\n        }\n      }\n    }\n\n  } else {\n    _.each(graphModel.nodes, function (node) {\n      if (node.glyphs) {\n        _.each(node.glyphs, function (glyph) {\n          if (glyph.position === 'ne' && parseInt(glyph.raw, 10) >= parseInt(onOkModalResult.relationsNumber, 10)) {\n            selection.push(node.id);\n          }\n        });\n      }\n    });\n  }\n\n  return {\n    model: null,\n    selection: selection\n  };\n}\n",
      "version": 2,
      "type": "contextual"
    }
  },
  {
    "_id": "script:Select-By-Entity-Type",
    "_type": "script",
    "_source": {
      "title": "Select - By Entity Type",
      "description": "Selects all the nodes of the chosen entity type.",
      "scriptSource": "/*\n * Select by Entity Type\n *\n *\n * f - refers to kibi helper with following functions available\n *   defaultExpansion(graphid, idList, relations)\n *   executeGremlinQuery(graphId, queryTemplate, idList)\n *   addResultsToGraph(graphId, queriedIds, results)\n *   executeEsSearch(index, type, body, size)\n *   getKibiRelations()\n *   openModal(graphId, title, innerHtml)\n *   handleModalResult(graphId, result)\n *\n * For detailed documentation of the above please contact support team\n *\n * NOTE:\n *   Use ECMAScript 5\n *   The name of the main function must be \"beforeAll\"\n *   The function should always return a promise which resolves\n *   with a modified graph model\n */\nfunction beforeAll(graphId, graphModel, graphSelection) {\n  var html = '<div ng-repeat=\"(entityId,opts) in entities\">'+\n    '<input type=\"checkbox\" ng-model=\"entities[entityId].selected\"> {{entities[entityId].label}} </input>'+\n    '</div>';\n  f.openModal(graphId, 'Choose the entity of items to be selected', html);\n\n  return Promise.resolve({\n    model: null,\n    selection: null\n  });\n}\n\nfunction onModalShow(scope, graphModel) {\n  f.getInvestigateEntities()\n  .then(function (entities) {\n    scope.entities = {};\n    _.each(graphModel.nodes, function (node) {\n      if (node.entityId && !scope.entities[node.entityId]) {\n        var entity = _.find(entities, function (entity) { return entity.id === node.entityId; });\n        if (entity) {\n          scope.entities[node.entityId] = {\n            selected: false,\n            label: entity.label\n          };\n        }\n      }\n    });\n  });\n}\n\nfunction onModalOk(scope, graphModel) {\n  let selection = [];\n\n  _.each(graphModel.nodes, function (node) {\n    if (scope.entities && node.entityId && scope.entities[node.entityId].selected) {\n      selection.push(node.id);\n    }\n  });\n\n  return {\n    model: null,\n    selection: selection\n  };\n}\n\nfunction afterModalClosed(graphId, graphModel, graphSelection, onOkModalResult) {\n  return {\n    model: null,\n    selection: onOkModalResult.selection\n  };\n}\n",
      "version": 2,
      "type": "contextual"
    }
  },
  {
    "_id": "script:Select-Extend",
    "_type": "script",
    "_source": {
      "title": "Select - Extend",
      "description": "Extends the current selection to the neighbors.",
      "scriptSource": "/*\n * Select Extend\n *\n * f - refers to kibi helper with following functions available\n *   defaultExpansion(graphid, idList, relations)\n *   executeGremlinQuery(graphId, queryTemplate, idList)\n *   addResultsToGraph(graphId, queriedIds, results)\n *   executeEsSearch(index, type, body, size)\n *   getKibiRelations()\n *   openModal(graphId, title, innerHtml)\n *   handleModalResult(graphId, result)\n *\n * For detailed documentation of the above please contact support team\n *\n * NOTE:\n *   Use ECMAScript 5\n *   The name of the main function must be \\\"beforeAll\\\"\n *   The function should always return a promise which resolves\n *   with a modified graph model\n */\nfunction beforeAll(graphId, graphModel, graphSelection) {\n  let newSelection = [];\n\n  _.each(graphSelection, function (selectedNode) {\n    _.each(graphModel.relations, function (relation) {\n      if (relation.in === selectedNode) {\n        newSelection.push(relation.out);\n      }\n      if (relation.out === selectedNode) {\n        newSelection.push(relation.in);\n      }\n    });\n    newSelection.push(selectedNode);\n  });\n\n  return Promise.resolve({ selection: newSelection});\n}\n",
      "version": 2,
      "type": "contextual"
    }
  },
  {
    "_id": "script:Default-Expansion-Policy",
    "_type": "script",
    "_source": {
      "title": "Default Expansion Policy",
      "description": "Expands the selected nodes using the selected relations",
      "scriptSource": "/*\n * Default Expansion Script - default implementation\n *\n * f - refers to kibi helper with following functions available\n *   defaultExpansion(graphid, idList, relations)\n *   executeGremlinQuery(graphId, queryTemplate, idList)\n *   addResultsToGraph(graphId, queriedIds, results)\n *   executeEsSearch(index, type, body, size)\n *   getKibiRelations()\n *   openModal(graphId, title, innerHtml)\n *   handleModalResult(graphId, result)\n *\n * For detailed documentation of the above please contact support team\n *\n * NOTE:\n *   Use ECMAScript 5\n *   The name of the main function must be \"expandFunction\"\n *   The function should always return a promise which resolves\n *   with list of added new vertices\n */\nfunction expandFunction(graphId, selectionIds, graphModel, relations) {\n  return f.defaultExpansion(graphId, selectionIds, relations).then(function (results) {\n    return f.addResultsToGraph(graphId, selectionIds, results);\n  })\n  .catch(f.notify.error);\n};\n",
      "version": 2,
      "type": "expansion"
    }
  },
  {
    "_id": "script:Proximity",
    "_type": "script",
    "_source": {
      "title": "Proximity",
      "description": "Detect when entities are further or closer than a specified distance",
      "scriptSource": "({\n  dashboard: {\n    order: 15,\n    show: (_, mappings) => false && JSON.stringify(mappings).includes('{\"type\":\"geo_point\"}'),\n  },\n  params: {\n    idField: 'id',\n    id1: '',\n    id2: '',\n    locationField: 'location',\n    distance: '10',\n    direction: 'closer',\n    trackingTime: '2',\n    trackingUnit: 'hours'\n  },\n  search: (client, searchParams, params) => {\n    const later = require('later');\n    const timeField = Object.keys(searchParams.time.range)[0];\n    const schedule = later.schedule(later.parse.text(`every ${params.trackingTime} ${params.trackingUnit}`));\n    const timeRange = {\n      range: {\n        [timeField]: {\n          gte: schedule.prev(2)[1],\n          lte: schedule.next(),\n          format: 'date_time'\n        }\n      }\n    };\n\n    function getEntity(id) {\n      return client.search({\n        index: [searchParams.index],\n        body: {\n          _source: [params.locationField],\n          query: {\n            bool: {\n              must: [\n                timeRange,\n                {\n                  match: {\n                    [params.idField]: id\n                  }\n                }\n              ]\n            }\n          },\n          size: 1,\n          sort: [\n            {\n              [timeField]: {\n                order: 'desc'\n              }\n            }\n          ]\n        }\n      });\n    }\n\n    function extractLocation(id, resp) {\n      if (!resp.hits.total) {\n        throw new Error(`${id} has not sent a location update in the last ${params.trackingTime} ${params.trackingUnit}`);\n      }\n      return resp.hits.hits[0]._source[params.locationField].split(',');\n    }\n\n    function calculateDistance([location1, location2]) {\n      const EARTH_RADIUS_TO_KM = 6371;\n      const toRad = num => num * Math.PI / 180;\n\n      var dLat = toRad(location2[0] - location1[0]);\n      var dLon = toRad(location2[1] - location1[1]);\n      var lat1 = toRad(location1[0]);\n      var lat2 = toRad(location2[0]);\n\n      var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2);\n      var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n      return +(EARTH_RADIUS_TO_KM * c).toFixed(3);\n    }\n\n    return Promise.all([\n      getEntity(params.id1).then(resp => extractLocation(params.id1, resp)),\n      getEntity(params.id2).then(resp => extractLocation(params.id1, resp)),\n    ])\n      .then(calculateDistance);\n  },\n  condition: (distance, searchParams, params) => {\n    console.log(`${params.id2} is ${distance} kilometers away from ${params.id1}`);\n    return (params.direction === 'further') ? distance > params.distance : distance < params.distance;\n  },\n  template: `\n<div class=\"row\">\n  <div class=\"form-group col-md-6\">\n    <label>ID Field</label>\n    <div class=\"input-group\">\n      <div class=\"input-group-addon\">\n        <i class=\"far fa-hashtag\" aria-hidden=\"true\"></i>\n      </div>\n      <select ng-model=\"params.idField\" ng-options=\"field for field in data.fields\" class=\"form-control\"></select>\n    </div>\n    <span class=\"help-block\">The field that distinguishes the source of a record</span>\n  </div>\n\n  <div class=\"form-group col-xs-6 col-md-3\">\n    <label>Entity 1</label>\n    <input type=\"text\" class=\"form-control\" ng-model=\"params.id1\">\n  </div>\n\n  <div class=\"form-group col-xs-6 col-md-3\">\n    <label>Entity 2</label>\n    <input type=\"text\" class=\"form-control\" ng-model=\"params.id2\">\n  </div>\n</div>\n\n<div class=\"row\">\n  <div class=\"form-group col-md-6\">\n    <label>Location Field</label>\n    <div class=\"input-group\">\n      <div class=\"input-group-addon\">\n        <i class=\"far fa-globe\" aria-hidden=\"true\"></i>\n      </div>\n      <select ng-model=\"params.locationField\" ng-options=\"field for field in data.geoFields\" class=\"form-control\"></select>\n    </div>\n    <span class=\"help-block\">The field that specifies the location of the entity</span>\n  </div>\n\n  <div class=\"form-group col-md-6\">\n    <div class=\"row\">\n      <div class=\"col-xs-6\">\n        <label>Direction</label>\n        <select ng-model=\"params.direction\" class=\"form-control\">\n          <option value=\"closer\" selected>closer</option>\n          <option value=\"further\">further</option>\n        </select>\n      </div>\n      <div class=\"col-xs-6\">\n        <label>Distance</label>\n        <input type=\"text\" class=\"form-control\" ng-model=\"params.distance\">\n      </div>\n      <span class=\"help-block col-sm-12\">Trigger if the two entities are {{params.direction}} than {{params.distance}} kilometers.</span>\n    </div>\n  </div>\n</div>\n\n<div class=\"row\">\n  <div class=\"form-group col-md-6\">\n    <label>Tracking Cooldown</label>\n    <div>\n      <div style=\"float: left; width: 50%; padding-right: 15px\">\n        <input type=\"text\" class=\"form-control\" ng-model=\"params.trackingTime\" style=\"height: 35px\">\n      </div>\n      <div style=\"float:left; width: 50%; padding-left: 15px\">\n        <select ng-model=\"params.trackingUnit\" class=\"form-control\" style=\"height: 35px\">\n          <option value=\"seconds\">seconds</option>\n          <option value=\"minutes\" selected>minutes</option>\n          <option value=\"hours\">hours</option>\n          <option value=\"days\">days</option>\n          <option value=\"months\">months</option>\n          <option value=\"years\">years</option>\n        </select>\n      </div>\n    </div>\n    <span class=\"help-block\">Alert if an entity hasn't sent a record in {{params.trackingTime}} {{params.trackingUnit}}</span>\n  </div>\n</div>\n`\n});\n",
      "type": "watcher",
      "version": 2,
      "kibanaSavedObjectMeta": {
        "searchSourceJSON": "{}"
      }
    }
  },
  {
    "_id": "script:Geo-fence",
    "_type": "script",
    "_source": {
      "title": "Geo fence",
      "description": "Alert for entries found in the geo filter",
      "scriptSource": "({\n  dashboard: {\n    order: 1,\n    show: (_, mappings) => JSON.stringify(mappings).includes('{\"type\":\"geo_point\"}'),\n    checkForError: dashboardQuery => {\n      if (dashboardQuery.filters.find(f => f.meta.type === 'geo_bounding_box')) {\n        return '';\n      } else {\n        return 'Dashboard must have a geo bounding box filter';\n      }\n    }\n  },\n  search: (client, searchParams) => client.search(searchParams.defaultRequest),\n  condition: response => !!response.hits.total\n});\n",
      "type": "watcher",
      "version": 2,
      "kibanaSavedObjectMeta": {
        "searchSourceJSON": "{}"
      }
    }
  },
  {
    "_id": "script:New-results",
    "_type": "script",
    "_source": {
      "title": "New results",
      "description": "Notifies you when you have new results for the search criteria",
      "scriptSource": "({\n  dashboard: {\n    order: 0\n  },\n  search: (client, searchParams) => client.search(searchParams.defaultRequest),\n  condition: response => !!response.hits.total\n});\n",
      "type": "watcher",
      "version": 2,
      "kibanaSavedObjectMeta": {
        "searchSourceJSON": "{}"
      }
    }
  },
  {
    "_id": "search:77559370-8483-11e9-a489-13a83bc6e842",
    "_type": "search",
    "_source": {
      "title": "Field of Study",
      "description": "",
      "hits": 0,
      "columns": [
        "_source"
      ],
      "sort": [
        "_score",
        "desc"
      ],
      "version": 1,
      "kibanaSavedObjectMeta": {
        "searchSourceJSON": "{\"index\":\"index-pattern:759768b0-8483-11e9-b1ac-8541d07eaf10\",\"highlightAll\":true,\"version\":true,\"query\":{\"match_all\":{}},\"filter\":[]}"
      }
    }
  },
  {
    "_id": "search:8f8c0050-8483-11e9-a489-13a83bc6e842",
    "_type": "search",
    "_source": {
      "title": "Organisation",
      "description": "",
      "hits": 0,
      "columns": [
        "_source"
      ],
      "sort": [
        "_score",
        "desc"
      ],
      "version": 1,
      "kibanaSavedObjectMeta": {
        "searchSourceJSON": "{\"index\":\"index-pattern:8dd2b790-8483-11e9-b1ac-8541d07eaf10\",\"highlightAll\":true,\"version\":true,\"query\":{\"match_all\":{}},\"filter\":[]}"
      }
    }
  },
  {
    "_id": "search:484ad730-8482-11e9-a489-13a83bc6e842",
    "_type": "search",
    "_source": {
      "title": "Author",
      "description": "",
      "hits": 0,
      "columns": [
        "_source"
      ],
      "sort": [
        "_score",
        "desc"
      ],
      "version": 1,
      "kibanaSavedObjectMeta": {
        "searchSourceJSON": "{\"index\":\"index-pattern:46c7e0b0-8482-11e9-b1ac-8541d07eaf10\",\"highlightAll\":true,\"version\":true,\"query\":{\"match_all\":{}},\"filter\":[]}"
      }
    }
  },
  {
    "_id": "search:6c2ec490-8482-11e9-a489-13a83bc6e842",
    "_type": "search",
    "_source": {
      "title": "Paper",
      "description": "",
      "hits": 0,
      "columns": [
        "_source"
      ],
      "sort": [
        "_score",
        "desc"
      ],
      "version": 1,
      "kibanaSavedObjectMeta": {
        "searchSourceJSON": "{\"index\":\"index-pattern:6a40fe50-8482-11e9-b1ac-8541d07eaf10\",\"highlightAll\":true,\"version\":true,\"query\":{\"match_all\":{}},\"filter\":[]}"
      }
    }
  },
  {
    "_id": "search:ab764d70-8483-11e9-a489-13a83bc6e842",
    "_type": "search",
    "_source": {
      "title": "Phrase",
      "description": "",
      "hits": 0,
      "columns": [
        "_source"
      ],
      "sort": [
        "_score",
        "desc"
      ],
      "version": 1,
      "kibanaSavedObjectMeta": {
        "searchSourceJSON": "{\"index\":\"index-pattern:a9bb2ff0-8483-11e9-b1ac-8541d07eaf10\",\"highlightAll\":true,\"version\":true,\"query\":{\"match_all\":{}},\"filter\":[]}"
      }
    }
  },
  {
    "_id": "search:a33de690-846f-11e9-ab8f-4737c8be8ed5",
    "_type": "search",
    "_source": {
      "title": "Staging Data",
      "description": "",
      "hits": 0,
      "columns": [
        "_source"
      ],
      "sort": [],
      "version": 1,
      "kibanaSavedObjectMeta": {
        "searchSourceJSON": "{\"index\":\"index-pattern:a19566b0-846f-11e9-96f4-fb17f00fafe1\",\"highlightAll\":true,\"version\":true}"
      }
    }
  },
  {
    "_id": "search:34cf8bf0-8483-11e9-a489-13a83bc6e842",
    "_type": "search",
    "_source": {
      "title": "Volume/Issue",
      "description": "",
      "hits": 0,
      "columns": [
        "_source"
      ],
      "sort": [
        "_score",
        "desc"
      ],
      "version": 1,
      "kibanaSavedObjectMeta": {
        "searchSourceJSON": "{\"index\":\"index-pattern:32cbccb0-8483-11e9-b1ac-8541d07eaf10\",\"highlightAll\":true,\"version\":true,\"query\":{\"match_all\":{}},\"filter\":[]}"
      }
    }
  },
  {
    "_id": "search:d0760080-8482-11e9-a489-13a83bc6e842",
    "_type": "search",
    "_source": {
      "title": "Publisher",
      "description": "",
      "hits": 0,
      "columns": [
        "_source"
      ],
      "sort": [
        "_score",
        "desc"
      ],
      "version": 1,
      "kibanaSavedObjectMeta": {
        "searchSourceJSON": "{\"index\":\"index-pattern:ceb45350-8482-11e9-b1ac-8541d07eaf10\",\"highlightAll\":true,\"version\":true,\"query\":{\"match_all\":{}},\"filter\":[]}"
      }
    }
  },
  {
    "_id": "search:cbc469e0-8483-11e9-a489-13a83bc6e842",
    "_type": "search",
    "_source": {
      "title": "Keyword",
      "description": "",
      "hits": 0,
      "columns": [
        "_source"
      ],
      "sort": [
        "_score",
        "desc"
      ],
      "version": 1,
      "kibanaSavedObjectMeta": {
        "searchSourceJSON": "{\"index\":\"index-pattern:ca0bbd60-8483-11e9-b1ac-8541d07eaf10\",\"highlightAll\":true,\"version\":true,\"query\":{\"match_all\":{}},\"filter\":[]}"
      }
    }
  },
  {
    "_id": "search:16c37040-8483-11e9-a489-13a83bc6e842",
    "_type": "search",
    "_source": {
      "title": "Venue",
      "description": "",
      "hits": 0,
      "columns": [
        "_source"
      ],
      "sort": [
        "_score",
        "desc"
      ],
      "version": 1,
      "kibanaSavedObjectMeta": {
        "searchSourceJSON": "{\"index\":\"index-pattern:150aead0-8483-11e9-b1ac-8541d07eaf10\",\"highlightAll\":true,\"version\":true,\"query\":{\"match_all\":{}},\"filter\":[]}"
      }
    }
  },
  {
    "_id": "search:573d2d00-8483-11e9-a489-13a83bc6e842",
    "_type": "search",
    "_source": {
      "title": "Year",
      "description": "",
      "hits": 0,
      "columns": [
        "_source"
      ],
      "sort": [
        "_score",
        "desc"
      ],
      "version": 1,
      "kibanaSavedObjectMeta": {
        "searchSourceJSON": "{\"index\":\"index-pattern:5573deb0-8483-11e9-b1ac-8541d07eaf10\",\"highlightAll\":true,\"version\":true,\"query\":{\"match_all\":{}},\"filter\":[]}"
      }
    }
  },
  {
    "_id": "template:kibi-table-handlebars",
    "_type": "template",
    "_source": {
      "title": "kibi-table-handlebars",
      "description": "A Handlebars template that displays query results as a table.",
      "templateSource": "{{! Handlebars table template example}}\n\n{{#if config.templateVars.hidden}}\n{{else}}\n  {{#if config.open}}\n    <span class=\"snippetLabel\">{{config.templateVars.label}}</span>\n    <a href=\"javascript:showHide('{{id}}');\" id=\"button-{{id}}\" class=\"snippetShowHideButton\" style=\"font-size:12px;\">- Hide</a> \n    <span> ({{results.bindings.length}})</span>\n    <div id=\"cont-{{id}}\"  style=\"display: block;\">\n  {{else}}\n    <span class=\"snippetLabel\">{{config.templateVars.label}}</span>\n    <a href=\"javascript:showHide('{{id}}');\" id=\"button-{{id}}\" class=\"snippetShowHideButton\" style=\"font-size:12px;\"> + Show</a> \n    <span> ({{results.bindings.length}})</span>\n    <div id=\"cont-{{id}}\"  style=\"display: none;\">\n  {{/if}}\n  <style>\n    table.custom-header th {color:black;}\n  </style>\n  <table class=\"table table-condensed custom-header\">\n      <thead>\n      <tr>\n          {{#each head.vars}}\n              <th>{{this}}</th>\n          {{/each}}\n      </tr>\n      </thead>\n      <tbody>\n      {{#each results.bindings}}\n      <tr>\n          {{#each ../head.vars}}\n            \n            {{!-- \n                  to handle \"this\" correctly a custom helper is available  \n                  \"../this\" is a reference to the binding\n                  while \"this\" contains the variable name\n            --}}\n            \n            {{#getVariableValue ../this this \"uri\" }}\n              <td>\n                <a href=\"{{value}}\">{{label}}</a>\n              </td>\n            {{else}}\n              <td>\n                {{value}}\n              </td>\n            {{/getVariableValue}}\n          {{/each}}\n      </tr>\n      {{/each}}\n      </tbody>\n  </table>\n  <br/>\n  <br/>\n  <script>\n    // here is how to pass the results  \n    var x = {{{json results}}};\n    // console.log(x);\n  \n   function showHide(id){\n    var buttonEl = document.getElementById('button-' + id);\n    var contEl = document.getElementById('cont-' + id);\n    var style = window.getComputedStyle(contEl);\n  \n    if (style.display == 'none') {\n      contEl.style.display = 'block';\n      buttonEl.innerHTML = '- Hide';\n    } else {\n      buttonEl.innerHTML = '+ Show';\n      contEl.style.display = 'none';\n    }\n  }\n<{{!}}/script>\n  </div>\n{{/if}}",
      "templateEngine": "handlebars",
      "version": 2,
      "kibanaSavedObjectMeta": {
        "searchSourceJSON": "{}"
      }
    }
  },
  {
    "_id": "template:kibi-table-jade",
    "_type": "template",
    "_source": {
      "title": "kibi-table-jade",
      "description": "A Jade template that displays query results as a table.",
      "templateSource": "//- Jade generic table template example\n\n- var display    = (config.open === true ? 'block' : 'none')\n- var buttonText = (config.open === true ? '- Hide' : '+ Show')\n\nstyle.\n thead.custome-header thead{color:#black;}\n\na(href=\"javascript:showHide('#{id}');\", id=\"button-#{id}\", class=\"snippetShowHideButton\") #{buttonText} \nspan= ' '\nspan(class=\"snippetLabel\")= config.templateVars.label\nspan=  ' ('+results.bindings.length +') '\ndiv(id=\"cont-#{id}\", style={display: display})\n  if results.bindings.length == 0\n    div(class=\"table-vis-error\") \n      h2\n        i(class=\"fa fa-meh\")\n      h4 No results found\n  else\n    table(class='table table-condensed custome-header')\n      thead\n        tr\n          each val in head.vars\n            th= val\n      tbody\n        each binding in results.bindings\n          tr\n            each varName in head.vars\n              if binding[varName]\n                if binding[varName].type == \"uri\"\n                  td\n                    a(href=\"#{binding[varName].value}\") #{binding[varName].label}\n                else\n                  td= binding[varName].value\n              else\n                td\nscript(type='text/javascript').\n  function showHide(id){\n    var buttonEl = document.getElementById('button-' + id);\n    var contEl = document.getElementById('cont-' + id);\n    var style = window.getComputedStyle(contEl);\n  \n    if (style.display == 'none') {\n      contEl.style.display = 'block';\n      buttonEl.innerHTML = '- Hide';\n    } else {\n      buttonEl.innerHTML = '+ Show';\n      contEl.style.display = 'none';\n    }\n  }\n  var x = !{JSON.stringify(results)};",
      "templateEngine": "jade",
      "version": 2,
      "kibanaSavedObjectMeta": {
        "searchSourceJSON": "{}"
      }
    }
  },
  {
    "_id": "template:kibi-html-angular",
    "_type": "template",
    "_source": {
      "title": "kibi-html-angular",
      "description": "An html-angular template, for each document displays a panel populated with all property values",
      "templateSource": "<!-- Example html-angular template \n     For each document a panel populated with all property values !-->\n<!DOCTYPE html>\n<div style=\"word-wrap: break-word;\">\n    <div ng-repeat=\"hit in hits|limitTo:limit track by hit._index+hit._type+hit._id+hit._score\"  class=\"snippet\"  style=\"width: 99%; border:1px #ddd solid; margin: 4px; padding: 4px; float: left\">\n        <h4 style=\"margin: 10px\" ng-if=\"hit._source.title\">\n            <div ng-bind-html=\"indexPattern.formatField(hit, 'title') | trustAsHtml\"></div>\n        </h4>\n                <table>\n                    <tr>\n                        <th style=\"text-align: right; padding: 4px;\">Property</th>\n                        <th style=\"padding: 4px;\">Value</th>\n                    </tr>      \n                    <tr ng-repeat=\"(key,value) in hit._source\"  ng-if=\"value !== null && value !== undefined && value !== ''\">\n                        <td style=\"width: 150px; font-weight: bold; vertical-align: top; text-align: right; padding: 4px;\"> {{key}}:</td>\n                        <td style=\"padding: 4px;\">{{value}}</td>\n                    </tr>  \n                </table>\n      </div>\n</div>\n<div style=\"clear: both;\"></div>",
      "templateEngine": "html-angular",
      "version": 2,
      "kibanaSavedObjectMeta": {
        "searchSourceJSON": "{}"
      }
    }
  },
  {
    "_id": "template:kibi-json-jade",
    "_type": "template",
    "_source": {
      "title": "kibi-json-jade",
      "description": "A Jade template that displays query results as a JSON object.",
      "templateSource": "//- The data passed to the template has the following format\n//- {\n//-   id: STRING, // a unique random id\n//-   results: {...}, // data returned by the query\n//-   config: {},     // query configuration\n//-   \n//- }\n//-\n//- Data returned by the query is assigned\n//- to the **results** property \n//- and can be used inside the template.\n\npre(id=id)= empty\nscript(type='text/javascript').\n  var id = '!{id}';\n  var x = !{JSON.stringify(results)};\n  var el = document.getElementById(id);\n  el.innerHTML = JSON.stringify(x, null, ' ');",
      "templateEngine": "jade",
      "version": 2,
      "kibanaSavedObjectMeta": {
        "searchSourceJSON": "{}"
      }
    }
  },
  {
    "_id": "visualization:ed9c3e20-8484-11e9-a489-13a83bc6e842",
    "_type": "visualization",
    "_source": {
      "title": "Community Analysis",
      "visState": "{\"title\":\"Community Analysis\",\"type\":\"graph_browser_vis\",\"params\":{\"contextualScripts\":[{\"id\":\"script:Select-By-Edge-Count\"},{\"id\":\"script:Shortest-Path\"},{\"id\":\"script:Select-By-Entity-Type\"},{\"id\":\"script:Select-Extend\"},{\"id\":\"script:Select-All\"},{\"id\":\"script:Expand-by-relation\"},{\"id\":\"script:Show-nodes-count-by-type\"},{\"id\":\"script:Select-Invert\"}],\"onUpdateScripts\":[],\"lensScripts\":[{\"id\":\"script:Graph-metric-lens.-default-implementation\"},{\"id\":\"script:Show-record-content-on-tooltips-lens.-default-implementation\"},{\"id\":\"script:Time-and-location-lens.-default-implementation\"},{\"id\":\"script:Advanced-lens.-default-implementation\"},{\"id\":\"script:Associate-records-based-on-ontology-lens-default-implementation\"},{\"id\":\"script:Size-lens.-default-implementation\"},{\"id\":\"script:Color-lens.-default-implementation\"},{\"id\":\"script:Label-lens.-default-implementation\"}],\"expansionScript\":\"script:Default-Expansion-Policy\",\"expansionLimit\":100,\"excludes\":[],\"type\":\"graph_browser_vis\"},\"aggs\":[],\"listeners\":{},\"version\":2,\"kibiSettings\":{}}",
      "uiStateJSON": "{\"settings\":{\"sidebar\":{}}}",
      "description": "",
      "version": 1,
      "kibanaSavedObjectMeta": {
        "searchSourceJSON": "{\"query\":{\"match_all\":{}},\"filter\":[]}"
      }
    }
  },
  {
    "_id": "visualization:e52d9a20-8472-11e9-ab8f-4737c8be8ed5",
    "_type": "visualization",
    "_source": {
      "title": "Filter by Ingestion Topic",
      "visState": "{\"title\":\"Filter by Ingestion Topic\",\"type\":\"input_control_vis\",\"params\":{\"controls\":[{\"id\":\"1559396427301\",\"indexPattern\":\"index-pattern:a19566b0-846f-11e9-96f4-fb17f00fafe1\",\"fieldName\":\"topic.keyword\",\"label\":\"Filter by Topic\",\"type\":\"list\",\"options\":{\"type\":\"terms\",\"multiselect\":true,\"size\":5,\"order\":\"desc\"}}],\"updateFiltersOnChange\":false,\"useTimeFilter\":false,\"type\":\"input_control_vis\"},\"aggs\":[],\"listeners\":{},\"kibiSettings\":{}}",
      "uiStateJSON": "{}",
      "description": "",
      "version": 1,
      "kibanaSavedObjectMeta": {
        "searchSourceJSON": "{\"query\":{\"match_all\":{}},\"filter\":[]}"
      }
    }
  },
  {
    "_id": "visualization:6ed87080-8471-11e9-ab8f-4737c8be8ed5",
    "_type": "visualization",
    "_source": {
      "title": "Ingestion Data By Minute",
      "visState": "{\"title\":\"Ingestion Data By Minute\",\"type\":\"line\",\"params\":{\"grid\":{\"categoryLines\":false,\"style\":{\"color\":\"#eee\"}},\"categoryAxes\":[{\"id\":\"CategoryAxis-1\",\"type\":\"category\",\"position\":\"bottom\",\"show\":true,\"style\":{},\"scale\":{\"type\":\"linear\"},\"labels\":{\"show\":true,\"truncate\":100},\"title\":{\"text\":\"sc_timestamp per minute\"}}],\"valueAxes\":[{\"id\":\"ValueAxis-1\",\"name\":\"LeftAxis-1\",\"type\":\"value\",\"position\":\"left\",\"show\":true,\"style\":{},\"scale\":{\"type\":\"log\",\"mode\":\"normal\"},\"labels\":{\"show\":true,\"rotate\":0,\"filter\":false,\"truncate\":100},\"title\":{\"text\":\"Number of Messages\"}}],\"seriesParams\":[{\"show\":true,\"mode\":\"normal\",\"type\":\"line\",\"drawLinesBetweenPoints\":true,\"showCircles\":true,\"data\":{\"id\":\"4\",\"label\":\"Number of Messages\"},\"valueAxis\":\"ValueAxis-1\"}],\"addTooltip\":true,\"addLegend\":true,\"legendPosition\":\"right\",\"times\":[],\"addTimeMarker\":false,\"type\":\"line\"},\"aggs\":[{\"id\":\"2\",\"enabled\":true,\"type\":\"date_histogram\",\"schema\":\"segment\",\"params\":{\"field\":\"sc_timestamp\",\"interval\":\"m\",\"customInterval\":\"2h\",\"min_doc_count\":1,\"extended_bounds\":{}}},{\"id\":\"4\",\"enabled\":true,\"type\":\"count\",\"schema\":\"metric\",\"params\":{\"customLabel\":\"Number of Messages\"}},{\"id\":\"5\",\"enabled\":true,\"type\":\"terms\",\"schema\":\"group\",\"params\":{\"field\":\"topic.keyword\",\"otherBucket\":false,\"otherBucketLabel\":\"Other\",\"missingBucket\":false,\"missingBucketLabel\":\"Missing\",\"size\":5,\"order\":\"desc\",\"orderBy\":\"4\"}}],\"listeners\":{},\"kibiSettings\":{}}",
      "uiStateJSON": "{}",
      "description": "",
      "savedSearchId": "search:a33de690-846f-11e9-ab8f-4737c8be8ed5",
      "version": 1,
      "kibanaSavedObjectMeta": {
        "searchSourceJSON": "{\"filter\":[]}"
      }
    }
  },
  {
    "_id": "visualization:0774e950-8485-11e9-a489-13a83bc6e842",
    "_type": "visualization",
    "_source": {
      "title": "Authors",
      "visState": "{\"title\":\"Authors\",\"type\":\"kibi-data-table\",\"params\":{\"clickOptions\":[],\"queryDefinitions\":[],\"columns\":[\"_source\"],\"customColumnAliases\":[],\"disableTimeField\":false,\"pageSize\":50,\"type\":\"kibi-data-table\",\"customColumnMinWidth\":[],\"customColumnWordWrap\":[false],\"moreLikeThisTemplate\":\"{\\n \\\"max_query_terms\\\": 25,\\n \\\"min_term_freq\\\": 1,\\n \\\"max_doc_freq\\\": 0,\\n \\\"min_word_length\\\": 0,\\n \\\"max_word_length\\\": 0,\\n \\\"stop_words\\\": []\\n}\",\"templateId\":\"\"},\"aggs\":[],\"listeners\":{},\"version\":2,\"kibiSettings\":{}}",
      "uiStateJSON": "{\"sort\":[\"_score\",\"desc\"]}",
      "description": "",
      "savedSearchId": "search:484ad730-8482-11e9-a489-13a83bc6e842",
      "version": 1,
      "kibanaSavedObjectMeta": {
        "searchSourceJSON": "{\"filter\":[]}"
      }
    }
  },
  {
    "_id": "visualization:21a7bd10-8472-11e9-ab8f-4737c8be8ed5",
    "_type": "visualization",
    "_source": {
      "title": "Ingestion Data Aggregated Table",
      "visState": "{\"title\":\"Ingestion Data Aggregated Table\",\"type\":\"table\",\"params\":{\"perPage\":10,\"showPartialRows\":false,\"showMeticsAtAllLevels\":false,\"sort\":{\"columnIndex\":null,\"direction\":null},\"showTotal\":false,\"totalFunc\":\"sum\",\"computedColumns\":[],\"hideExportLinks\":false,\"showFilterBar\":false,\"filterCaseSensitive\":false,\"filterBarHideable\":false,\"filterAsYouType\":false,\"filterBarWidth\":\"25%\",\"type\":\"table\"},\"aggs\":[{\"id\":\"1\",\"enabled\":true,\"type\":\"count\",\"schema\":\"metric\",\"params\":{}},{\"id\":\"2\",\"enabled\":true,\"type\":\"date_histogram\",\"schema\":\"bucket\",\"params\":{\"field\":\"sc_timestamp\",\"interval\":\"m\",\"customInterval\":\"2h\",\"min_doc_count\":1,\"extended_bounds\":{},\"customLabel\":\"Message Recived\"}},{\"id\":\"3\",\"enabled\":true,\"type\":\"terms\",\"schema\":\"splitcols\",\"params\":{\"field\":\"topic.keyword\",\"otherBucket\":false,\"otherBucketLabel\":\"Other\",\"missingBucket\":false,\"missingBucketLabel\":\"Missing\",\"size\":3,\"order\":\"desc\",\"orderBy\":\"1\",\"customLabel\":\"Ingestion Topic\"}}],\"listeners\":{},\"kibiSettings\":{}}",
      "uiStateJSON": "{\"vis\":{\"params\":{\"sort\":{\"columnIndex\":null,\"direction\":null}}}}",
      "description": "",
      "savedSearchId": "search:a33de690-846f-11e9-ab8f-4737c8be8ed5",
      "version": 1,
      "kibanaSavedObjectMeta": {
        "searchSourceJSON": "{\"filter\":[]}"
      }
    }
  },
  {
    "_id": "visualization:4ef44ef0-84bd-11e9-9214-c75b97962756",
    "_type": "visualization",
    "_source": {
      "title": "Paper Graph",
      "visState": "{\"title\":\"Paper Graph\",\"type\":\"graph_browser_vis\",\"params\":{\"contextualScripts\":[{\"id\":\"script:Shortest-Path\"},{\"id\":\"script:Select-By-Entity-Type\"},{\"id\":\"script:Show-nodes-count-by-type\"},{\"id\":\"script:Select-Extend\"},{\"id\":\"script:Select-All\"},{\"id\":\"script:Select-Invert\"},{\"id\":\"script:Expand-by-relation\"},{\"id\":\"script:Select-By-Edge-Count\"}],\"onUpdateScripts\":[],\"lensScripts\":[{\"id\":\"script:Size-lens.-default-implementation\"},{\"id\":\"script:Graph-metric-lens.-default-implementation\"},{\"id\":\"script:Label-lens.-default-implementation\"},{\"id\":\"script:Time-and-location-lens.-default-implementation\"},{\"id\":\"script:Advanced-lens.-default-implementation\"},{\"id\":\"script:Associate-records-based-on-ontology-lens-default-implementation\"},{\"id\":\"script:Color-lens.-default-implementation\"},{\"id\":\"script:Show-record-content-on-tooltips-lens.-default-implementation\"}],\"expansionScript\":\"script:Default-Expansion-Policy\",\"expansionLimit\":100,\"excludes\":[],\"type\":\"graph_browser_vis\"},\"aggs\":[],\"listeners\":{},\"version\":2,\"kibiSettings\":{}}",
      "uiStateJSON": "{\"settings\":{\"sidebar\":{}}}",
      "description": "",
      "version": 1,
      "kibanaSavedObjectMeta": {
        "searchSourceJSON": "{\"query\":{\"match_all\":{}},\"filter\":[]}"
      }
    }
  },
  {
    "_id": "visualization:6023ae00-8472-11e9-ab8f-4737c8be8ed5",
    "_type": "visualization",
    "_source": {
      "title": "Graph Data Table",
      "visState": "{\"title\":\"Graph Data Table\",\"type\":\"kibi-data-table\",\"params\":{\"clickOptions\":[],\"queryDefinitions\":[],\"columns\":[\"_source\"],\"customColumnAliases\":[\"Message Input\"],\"disableTimeField\":false,\"pageSize\":38,\"type\":\"kibi-data-table\",\"customColumnMinWidth\":[],\"customColumnWordWrap\":[false],\"moreLikeThisTemplate\":\"{\\n \\\"max_query_terms\\\": 25,\\n \\\"min_term_freq\\\": 1,\\n \\\"max_doc_freq\\\": 0,\\n \\\"min_word_length\\\": 0,\\n \\\"max_word_length\\\": 0,\\n \\\"stop_words\\\": []\\n}\",\"templateId\":\"template:kibi-html-angular\",\"searchEngineLook\":false,\"enableTopPaginator\":true,\"customizeColumns\":true},\"aggs\":[],\"listeners\":{},\"version\":2,\"kibiSettings\":{}}",
      "uiStateJSON": "{\"sort\":[]}",
      "description": "",
      "savedSearchId": "search:a33de690-846f-11e9-ab8f-4737c8be8ed5",
      "version": 1,
      "kibanaSavedObjectMeta": {
        "searchSourceJSON": "{\"filter\":[]}"
      }
    }
  },
  {
    "_id": "visualization:50012580-8485-11e9-a489-13a83bc6e842",
    "_type": "visualization",
    "_source": {
      "title": "Papers",
      "visState": "{\"title\":\"Papers\",\"type\":\"kibi-data-table\",\"params\":{\"clickOptions\":[],\"queryDefinitions\":[],\"columns\":[\"_source\"],\"customColumnAliases\":[\"Paper\"],\"disableTimeField\":false,\"pageSize\":10000,\"type\":\"kibi-data-table\",\"customColumnMinWidth\":[],\"customColumnWordWrap\":[false],\"moreLikeThisTemplate\":\"{\\n \\\"max_query_terms\\\": 25,\\n \\\"min_term_freq\\\": 1,\\n \\\"max_doc_freq\\\": 0,\\n \\\"min_word_length\\\": 0,\\n \\\"max_word_length\\\": 0,\\n \\\"stop_words\\\": []\\n}\",\"templateId\":\"template:kibi-html-angular\",\"enableTopPaginator\":true,\"customizeColumns\":true},\"aggs\":[],\"listeners\":{},\"version\":2,\"kibiSettings\":{}}",
      "uiStateJSON": "{\"settings\":{\"lenses\":{\"lens\":{}}},\"sort\":[]}",
      "description": "",
      "savedSearchId": "search:6c2ec490-8482-11e9-a489-13a83bc6e842",
      "version": 1,
      "kibanaSavedObjectMeta": {
        "searchSourceJSON": "{\"filter\":[]}"
      }
    }
  },
  {
    "_id": "visualization:2ff9aa00-84bc-11e9-9214-c75b97962756",
    "_type": "visualization",
    "_source": {
      "title": "Papers Table View",
      "visState": "{\"title\":\"Papers Table View\",\"type\":\"kibi-data-table\",\"params\":{\"clickOptions\":[],\"queryDefinitions\":[],\"columns\":[\"_source\"],\"customColumnAliases\":[],\"disableTimeField\":false,\"pageSize\":1,\"type\":\"kibi-data-table\",\"customColumnMinWidth\":[],\"customColumnWordWrap\":[false],\"moreLikeThisTemplate\":\"{\\n \\\"max_query_terms\\\": 25,\\n \\\"min_term_freq\\\": 1,\\n \\\"max_doc_freq\\\": 0,\\n \\\"min_word_length\\\": 0,\\n \\\"max_word_length\\\": 0,\\n \\\"stop_words\\\": []\\n}\",\"templateId\":\"template:kibi-html-angular\",\"searchEngineLook\":false,\"customizeColumns\":false},\"aggs\":[],\"listeners\":{},\"version\":2,\"kibiSettings\":{}}",
      "uiStateJSON": "{\"sort\":[\"_score\",\"desc\"]}",
      "description": "",
      "savedSearchId": "search:6c2ec490-8482-11e9-a489-13a83bc6e842",
      "version": 1,
      "kibanaSavedObjectMeta": {
        "searchSourceJSON": "{\"filter\":[]}"
      }
    }
  },
  {
    "_id": "visualization:ca4d9170-84bc-11e9-9214-c75b97962756",
    "_type": "visualization",
    "_source": {
      "title": "Paper Filters",
      "visState": "{\"title\":\"Paper Filters\",\"type\":\"input_control_vis\",\"params\":{\"controls\":[{\"id\":\"1559493478091\",\"indexPattern\":\"index-pattern:6a40fe50-8482-11e9-b1ac-8541d07eaf10\",\"fieldName\":\"authors.name.keyword\",\"label\":\"Author\",\"type\":\"list\",\"options\":{\"type\":\"terms\",\"multiselect\":true,\"size\":5,\"order\":\"desc\"}},{\"id\":\"1559428008876\",\"indexPattern\":\"index-pattern:6a40fe50-8482-11e9-b1ac-8541d07eaf10\",\"fieldName\":\"authors.org.keyword\",\"label\":\"Organisation\",\"type\":\"list\",\"options\":{\"type\":\"terms\",\"multiselect\":true,\"size\":250,\"order\":\"desc\"}},{\"id\":\"1559428026561\",\"indexPattern\":\"index-pattern:6a40fe50-8482-11e9-b1ac-8541d07eaf10\",\"fieldName\":\"volume.keyword\",\"label\":\"Publication\",\"type\":\"list\",\"options\":{\"type\":\"terms\",\"multiselect\":true,\"size\":250,\"order\":\"desc\"}},{\"id\":\"1559428050977\",\"indexPattern\":\"index-pattern:6a40fe50-8482-11e9-b1ac-8541d07eaf10\",\"fieldName\":\"fos.keyword\",\"label\":\"Field of Study\",\"type\":\"list\",\"options\":{\"type\":\"terms\",\"multiselect\":true,\"size\":250,\"order\":\"desc\"}},{\"id\":\"1559428083426\",\"indexPattern\":\"index-pattern:6a40fe50-8482-11e9-b1ac-8541d07eaf10\",\"fieldName\":\"keywords.keyword\",\"label\":\"Keyword\",\"type\":\"list\",\"options\":{\"type\":\"terms\",\"multiselect\":true,\"size\":250,\"order\":\"desc\"}},{\"id\":\"1559428097193\",\"indexPattern\":\"index-pattern:6a40fe50-8482-11e9-b1ac-8541d07eaf10\",\"fieldName\":\"abstract_bigrams.keyword\",\"label\":\"Phrase\",\"type\":\"list\",\"options\":{\"type\":\"terms\",\"multiselect\":true,\"size\":250,\"order\":\"desc\"}},{\"id\":\"1559427990402\",\"indexPattern\":\"index-pattern:6a40fe50-8482-11e9-b1ac-8541d07eaf10\",\"fieldName\":\"lpa_communities\",\"label\":\"Community\",\"type\":\"list\",\"options\":{\"type\":\"terms\",\"multiselect\":true,\"size\":250,\"order\":\"desc\"}}],\"updateFiltersOnChange\":true,\"useTimeFilter\":false,\"type\":\"input_control_vis\"},\"aggs\":[],\"listeners\":{},\"kibiSettings\":{}}",
      "uiStateJSON": "{}",
      "description": "",
      "version": 1,
      "kibanaSavedObjectMeta": {
        "searchSourceJSON": "{\"query\":{\"match_all\":{}},\"filter\":[]}"
      }
    }
  }
]